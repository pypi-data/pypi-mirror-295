[tool.poetry]
name = "vanty"
version = "0.0.42"
description = "CLI for installing and managing projects & applications from advantch.com and vanty.ai"
authors = ["Themba <themba@advantch.com>"]
license = "Unspecified"
readme = "README.md"
packages = [{include = "vanty"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
typer = {extras = ["all"], version = ">=0.9.0"}
honcho = ">=1.1.0"
django-environ = ">=0.10.0,<=0.11.2"
sh = "^2.0.4"
toml = ">=0.10.2,<0.11.0"
httpx = ">=0.24.1,<=0.27.0"
pydantic = ">=2.2.1,<=2.8.2"
rich = "^13.7.1"


[tool.poetry.scripts]
vanty = "vanty.__main__:main"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
ruff = "^0.6.4"
pytest-mock = ">=3.10.0,<3.14.0"
respx = ">=0.20.1,<0.21.1"
requests = ">=2.31.0,<2.32.0"
responses = ">=0.23.1,<0.24.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py310"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
