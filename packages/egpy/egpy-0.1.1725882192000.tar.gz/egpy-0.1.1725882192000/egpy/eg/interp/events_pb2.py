# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eg.interp.events.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'eg.interp.events.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x65g.interp.events.proto\x12\x10\x65g.interp.events\"\x19\n\x0bRunMetadata\x12\n\n\x02id\x18\x01 \x01(\x0c\"R\n\tLogHeader\x12\r\n\x05Major\x18\x01 \x01(\x05\x12\r\n\x05Minor\x18\x02 \x01(\x05\x12\r\n\x05Patch\x18\x03 \x01(\x05\x12\x0b\n\x03sts\x18\x04 \x01(\x03\x12\x0b\n\x03\x65ts\x18\x05 \x01(\x03\"\x0b\n\tHeartbeat\"\xb3\x01\n\x04Task\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0b\n\x03pid\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12+\n\x05state\x18\x04 \x01(\x0e\x32\x1c.eg.interp.events.Task.State\x12\x10\n\x08\x64\x65\x61\x64line\x18\x05 \x01(\x03\">\n\x05State\x12\x0b\n\x07Pending\x10\x00\x12\r\n\tInitiated\x10\x01\x12\r\n\tCompleted\x10\x02\x12\n\n\x05\x45rror\x10\xe8\x07\"2\n\x06Metric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\nfieldsJSON\x18\xe8\x07 \x01(\x0cJ\x05\x08\x02\x10\xe8\x07\"\xe1\x01\n\x07Message\x12\n\n\x02id\x18\x01 \x01(\t\x12\n\n\x02ts\x18\x02 \x01(\x03\x12/\n\x08preamble\x18\x64 \x01(\x0b\x32\x1b.eg.interp.events.LogHeaderH\x00\x12\x30\n\theartbeat\x18\x65 \x01(\x0b\x32\x1b.eg.interp.events.HeartbeatH\x00\x12&\n\x04task\x18\x66 \x01(\x0b\x32\x16.eg.interp.events.TaskH\x00\x12*\n\x06metric\x18g \x01(\x0b\x32\x18.eg.interp.events.MetricH\x00\x42\x07\n\x05\x45vent\"\xc4\x01\n\x0eRunUploadChunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x10\n\x08\x63hecksum\x18\x02 \x01(\x0c\x12\x0e\n\x04none\x18\x03 \x01(\x08H\x00\x12=\n\x08metadata\x18\x04 \x01(\x0b\x32).eg.interp.events.RunUploadChunk.MetadataH\x00\x1a+\n\x08Metadata\x12\r\n\x05\x62ytes\x18\x01 \x01(\x04\x12\x10\n\x08\x63hecksum\x18\x02 \x01(\x0c\x42\x16\n\x14initialChunkMetadata\"?\n\x11RunUploadResponse\x12*\n\x03run\x18\x01 \x01(\x0b\x32\x1d.eg.interp.events.RunMetadata\";\n\rRunLogRequest\x12*\n\x03run\x18\x01 \x01(\x0b\x32\x1d.eg.interp.events.RunMetadata\"!\n\x0eRunLogResponse\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\"\x14\n\x12RunInitiateRequest\"\x13\n\x11RunInitiateResult\"\x12\n\x10RunCancelRequest\"\x13\n\x11RunCancelResponse\"=\n\x0fRunWatchRequest\x12*\n\x03run\x18\x01 \x01(\x0b\x32\x1d.eg.interp.events.RunMetadata\">\n\x0f\x44ispatchRequest\x12+\n\x08messages\x18\x01 \x03(\x0b\x32\x19.eg.interp.events.Message\"\x12\n\x10\x44ispatchResponse2\xcb\x02\n\x05\x41gent\x12S\n\x06Upload\x12 .eg.interp.events.RunUploadChunk\x1a#.eg.interp.events.RunUploadResponse\"\x00(\x01\x12S\n\x06\x43\x61ncel\x12\".eg.interp.events.RunCancelRequest\x1a#.eg.interp.events.RunCancelResponse\"\x00\x12M\n\x04Logs\x12\x1f.eg.interp.events.RunLogRequest\x1a .eg.interp.events.RunLogResponse\"\x00\x30\x01\x12I\n\x05Watch\x12!.eg.interp.events.RunWatchRequest\x1a\x19.eg.interp.events.Message\"\x00\x30\x01\x32]\n\x06\x45vents\x12S\n\x08\x44ispatch\x12!.eg.interp.events.DispatchRequest\x1a\".eg.interp.events.DispatchResponse\"\x00\x32]\n\x06Runner\x12S\n\x08\x44ispatch\x12!.eg.interp.events.DispatchRequest\x1a\".eg.interp.events.DispatchResponse\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'eg.interp.events_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_RUNMETADATA']._serialized_start=44
  _globals['_RUNMETADATA']._serialized_end=69
  _globals['_LOGHEADER']._serialized_start=71
  _globals['_LOGHEADER']._serialized_end=153
  _globals['_HEARTBEAT']._serialized_start=155
  _globals['_HEARTBEAT']._serialized_end=166
  _globals['_TASK']._serialized_start=169
  _globals['_TASK']._serialized_end=348
  _globals['_TASK_STATE']._serialized_start=286
  _globals['_TASK_STATE']._serialized_end=348
  _globals['_METRIC']._serialized_start=350
  _globals['_METRIC']._serialized_end=400
  _globals['_MESSAGE']._serialized_start=403
  _globals['_MESSAGE']._serialized_end=628
  _globals['_RUNUPLOADCHUNK']._serialized_start=631
  _globals['_RUNUPLOADCHUNK']._serialized_end=827
  _globals['_RUNUPLOADCHUNK_METADATA']._serialized_start=760
  _globals['_RUNUPLOADCHUNK_METADATA']._serialized_end=803
  _globals['_RUNUPLOADRESPONSE']._serialized_start=829
  _globals['_RUNUPLOADRESPONSE']._serialized_end=892
  _globals['_RUNLOGREQUEST']._serialized_start=894
  _globals['_RUNLOGREQUEST']._serialized_end=953
  _globals['_RUNLOGRESPONSE']._serialized_start=955
  _globals['_RUNLOGRESPONSE']._serialized_end=988
  _globals['_RUNINITIATEREQUEST']._serialized_start=990
  _globals['_RUNINITIATEREQUEST']._serialized_end=1010
  _globals['_RUNINITIATERESULT']._serialized_start=1012
  _globals['_RUNINITIATERESULT']._serialized_end=1031
  _globals['_RUNCANCELREQUEST']._serialized_start=1033
  _globals['_RUNCANCELREQUEST']._serialized_end=1051
  _globals['_RUNCANCELRESPONSE']._serialized_start=1053
  _globals['_RUNCANCELRESPONSE']._serialized_end=1072
  _globals['_RUNWATCHREQUEST']._serialized_start=1074
  _globals['_RUNWATCHREQUEST']._serialized_end=1135
  _globals['_DISPATCHREQUEST']._serialized_start=1137
  _globals['_DISPATCHREQUEST']._serialized_end=1199
  _globals['_DISPATCHRESPONSE']._serialized_start=1201
  _globals['_DISPATCHRESPONSE']._serialized_end=1219
  _globals['_AGENT']._serialized_start=1222
  _globals['_AGENT']._serialized_end=1553
  _globals['_EVENTS']._serialized_start=1555
  _globals['_EVENTS']._serialized_end=1648
  _globals['_RUNNER']._serialized_start=1650
  _globals['_RUNNER']._serialized_end=1743
# @@protoc_insertion_point(module_scope)
