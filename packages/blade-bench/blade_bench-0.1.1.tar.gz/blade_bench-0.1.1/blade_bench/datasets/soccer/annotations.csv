spec_id,dependency_graph,conceptual_spec_json,transform_spec_json,model_spec_json,tisane_spec_json,annotate_cvar_spec_json,annotate_transform_spec_json
5ba9b3c233f745e1abae11c10db99266,"{
  ""directed"": true,
  ""multigraph"": false,
  ""graph"": {},
  ""nodes"": [
    {
      ""id"": ""ROOT_SPEC_ID""
    },
    {
      ""id"": ""82121faef295492ca0d32af6d21d9b89""
    },
    {
      ""id"": ""ea4945fa39fd4800ad2aaf19415cb342""
    },
    {
      ""id"": ""52cf40d969fb44c6910a2f0df44b47a6""
    },
    {
      ""id"": ""5a98a0a59d0f4726b566b57b1ac1e951""
    },
    {
      ""id"": ""d1110208133b4225a2ffa69f1f5f3418""
    },
    {
      ""id"": ""b0412a0acb1a4dadb224cc479bf9ba07""
    },
    {
      ""id"": ""5e616bd092f9477bb93555a685fcd522""
    },
    {
      ""id"": ""88a0383223d948338bda9cba4b51aaeb""
    },
    {
      ""id"": ""19388e9346294fbbaf17a2fd6b4d71af""
    },
    {
      ""id"": ""d5da7998b05f45dabf7705ea74361176""
    },
    {
      ""id"": ""d9bb30e3b3274e9f9c65d94882db824a""
    },
    {
      ""id"": ""8f64dd94caed43f3a784c42cf90770ab""
    },
    {
      ""id"": ""42b44f1271bb424c8ea4e6fb95c35538""
    },
    {
      ""id"": ""57f409ce4b094b578d85a4b9b0fe8493""
    },
    {
      ""id"": ""1bd8dbeeb6e64196aabd65557edef8ae""
    },
    {
      ""id"": ""fe93c2f7b9224c51805c01a816c8aa8e""
    },
    {
      ""id"": ""bca7328d9ecf41f390d735cb331d4a6d""
    },
    {
      ""id"": ""a578e53007ea44b6bc3fc5d368dce254""
    },
    {
      ""id"": ""495b7db3b6274b81bda8277e0a69a11e""
    },
    {
      ""id"": ""8dad2bee4e0d4113b2e2ee6848449f6c""
    },
    {
      ""id"": ""edccb89484aa4bc2a17639c1c7402628""
    },
    {
      ""id"": ""a3704d1d9dfe4a28843f8930d7ef45f1""
    },
    {
      ""id"": ""28283f23f2f548488e2b13a9b72f3c0d""
    },
    {
      ""id"": ""a584791866ee47acbd658e85ef88b402""
    },
    {
      ""id"": ""7b8c82026519441f8043b19997cbba82""
    },
    {
      ""id"": ""6ddfa30e0de34a1caed8d1fc7de07295""
    },
    {
      ""id"": ""ad706d71becb490094de1cb61bb8144f""
    },
    {
      ""id"": ""406fce3c69714585a879749a9a436109""
    },
    {
      ""id"": ""8f6fd7a964614d1eb8418d9bc8e36ebe""
    },
    {
      ""id"": ""416eab3d2b294ce390321129f41080a8""
    },
    {
      ""id"": ""d6ea8dc6496443398a7fe03b45eb49c8""
    },
    {
      ""id"": ""f2a325eddd624412a702e04960338283""
    },
    {
      ""id"": ""2b508b8bd61a4796882235cd6e7a92ac""
    },
    {
      ""id"": ""9b164686705048849bedde630fb475bd""
    },
    {
      ""id"": ""b08ce3bdd47b4118917c901505ac6207""
    },
    {
      ""id"": ""668078746b694f518c91a5909be4b145""
    },
    {
      ""id"": ""9f752f9334984b3ca4d16836cb728436""
    },
    {
      ""id"": ""efa788f98bdb4b66aa10768a34d31469""
    },
    {
      ""id"": ""3bd5c9374aae4c1bbf6cb63250b6983d""
    },
    {
      ""id"": ""3efb9481beac461693817c01a9cf2abd""
    },
    {
      ""id"": ""a135c759bcbb41b18f4813f4399f14ac""
    },
    {
      ""id"": ""18cd7094bab4414c83b57f2b91666e18""
    },
    {
      ""id"": ""7e281dd41efb43bba7c486d21b9a0800""
    },
    {
      ""id"": ""1586203651f448bda711057936926325""
    },
    {
      ""id"": ""d9121ad3401d4e0f975c71844c1409c9""
    },
    {
      ""id"": ""3d2b04bf091e42528a43684e1845c02f""
    },
    {
      ""id"": ""4107c1348d2b4018905a5f358f5e294f""
    },
    {
      ""id"": ""79b0327519f14b6a98d53b05d0df50da""
    },
    {
      ""id"": ""075621325a484de9b0c94b49c8b5351d""
    },
    {
      ""id"": ""215a96a498b7493b8e5c133aeff659b5""
    },
    {
      ""id"": ""b6fc1ebabfae409186e989a4cbecf6de""
    },
    {
      ""id"": ""5ce2a06bbb8a4085a6c66ea54e698921""
    },
    {
      ""id"": ""0e31df0c149b453bb2db92324fef311b""
    },
    {
      ""id"": ""30883779fb3647ce91178aac14b7df4c""
    },
    {
      ""id"": ""2eeb358af75b4336a40d2c0710e45046""
    },
    {
      ""id"": ""0c3b683a12814e73b45f232e4998521b""
    },
    {
      ""id"": ""8cb9f8bf89fe4da591296a13d20e049f""
    },
    {
      ""id"": ""5d2bb5a86986447abeb4608fe9f04bc2""
    },
    {
      ""id"": ""1d851c2c207c4ef79af7b1c799a987ff""
    },
    {
      ""id"": ""e4edbd42b2f442df8a8f0846ca0f6aae""
    },
    {
      ""id"": ""f35fb09b6b38478e983b16561be9b804""
    },
    {
      ""id"": ""44e96be2d4964b4b85ba01c983bbf3ad""
    },
    {
      ""id"": ""59e65321f89846e1a293ba1d81af86b2""
    },
    {
      ""id"": ""c592a68b95ee47bfbcf51583d4f668ae""
    },
    {
      ""id"": ""552e735c7645434680270583845eded0""
    },
    {
      ""id"": ""e046abde736f4b9fbdfed2b9e6b331ad""
    },
    {
      ""id"": ""6b26a4545f8d4bb789919dc668736603""
    },
    {
      ""id"": ""c67a792a732c45eb95287c5409aa6f99""
    },
    {
      ""id"": ""4739acc8f57c4eef983eb3b2f52ddae3""
    },
    {
      ""id"": ""21db99f997b14bd5a18d7e5a928fe2d1""
    },
    {
      ""id"": ""de2411a15fcd4ff38f065e4dd017289b""
    },
    {
      ""id"": ""d4eea5ea10ad4772a7d5f187d339d945""
    },
    {
      ""id"": ""17fb1e1adf974e14a008e34236d02c3c""
    },
    {
      ""id"": ""a74216e5e8874183bc57807e61d812d5""
    },
    {
      ""id"": ""253c9b28b703464cab04825c5e19c666""
    },
    {
      ""id"": ""ff5530db3e474497b0208abf5b45b064""
    },
    {
      ""id"": ""cc55354723944e3383a4384914be4167""
    },
    {
      ""id"": ""25b12c96f4c14ad5b4673444173194da""
    },
    {
      ""id"": ""6c36cd281fc64b119422eaece9c6696e""
    },
    {
      ""id"": ""fd92763db8e44d3b80d84759df9af7be""
    }
  ],
  ""links"": [
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""d9bb30e3b3274e9f9c65d94882db824a""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""57f409ce4b094b578d85a4b9b0fe8493""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""fe93c2f7b9224c51805c01a816c8aa8e""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""bca7328d9ecf41f390d735cb331d4a6d""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""edccb89484aa4bc2a17639c1c7402628""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""8dad2bee4e0d4113b2e2ee6848449f6c""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""a3704d1d9dfe4a28843f8930d7ef45f1""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""28283f23f2f548488e2b13a9b72f3c0d""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""1bd8dbeeb6e64196aabd65557edef8ae""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""a584791866ee47acbd658e85ef88b402""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""6ddfa30e0de34a1caed8d1fc7de07295""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""8f6fd7a964614d1eb8418d9bc8e36ebe""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""d6ea8dc6496443398a7fe03b45eb49c8""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""b0412a0acb1a4dadb224cc479bf9ba07""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""668078746b694f518c91a5909be4b145""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""82121faef295492ca0d32af6d21d9b89""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""52cf40d969fb44c6910a2f0df44b47a6""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""5a98a0a59d0f4726b566b57b1ac1e951""
    },
    {
      ""source"": ""ROOT_SPEC_ID"",
      ""target"": ""88a0383223d948338bda9cba4b51aaeb""
    },
    {
      ""source"": ""82121faef295492ca0d32af6d21d9b89"",
      ""target"": ""495b7db3b6274b81bda8277e0a69a11e""
    },
    {
      ""source"": ""82121faef295492ca0d32af6d21d9b89"",
      ""target"": ""d5da7998b05f45dabf7705ea74361176""
    },
    {
      ""source"": ""82121faef295492ca0d32af6d21d9b89"",
      ""target"": ""ea4945fa39fd4800ad2aaf19415cb342""
    },
    {
      ""source"": ""82121faef295492ca0d32af6d21d9b89"",
      ""target"": ""8f64dd94caed43f3a784c42cf90770ab""
    },
    {
      ""source"": ""82121faef295492ca0d32af6d21d9b89"",
      ""target"": ""2b508b8bd61a4796882235cd6e7a92ac""
    },
    {
      ""source"": ""52cf40d969fb44c6910a2f0df44b47a6"",
      ""target"": ""5e616bd092f9477bb93555a685fcd522""
    },
    {
      ""source"": ""52cf40d969fb44c6910a2f0df44b47a6"",
      ""target"": ""d1110208133b4225a2ffa69f1f5f3418""
    },
    {
      ""source"": ""d1110208133b4225a2ffa69f1f5f3418"",
      ""target"": ""f2a325eddd624412a702e04960338283""
    },
    {
      ""source"": ""88a0383223d948338bda9cba4b51aaeb"",
      ""target"": ""19388e9346294fbbaf17a2fd6b4d71af""
    },
    {
      ""source"": ""42b44f1271bb424c8ea4e6fb95c35538"",
      ""target"": ""3efb9481beac461693817c01a9cf2abd""
    },
    {
      ""source"": ""57f409ce4b094b578d85a4b9b0fe8493"",
      ""target"": ""42b44f1271bb424c8ea4e6fb95c35538""
    },
    {
      ""source"": ""57f409ce4b094b578d85a4b9b0fe8493"",
      ""target"": ""406fce3c69714585a879749a9a436109""
    },
    {
      ""source"": ""57f409ce4b094b578d85a4b9b0fe8493"",
      ""target"": ""ad706d71becb490094de1cb61bb8144f""
    },
    {
      ""source"": ""bca7328d9ecf41f390d735cb331d4a6d"",
      ""target"": ""a578e53007ea44b6bc3fc5d368dce254""
    },
    {
      ""source"": ""a584791866ee47acbd658e85ef88b402"",
      ""target"": ""7b8c82026519441f8043b19997cbba82""
    },
    {
      ""source"": ""a584791866ee47acbd658e85ef88b402"",
      ""target"": ""9b164686705048849bedde630fb475bd""
    },
    {
      ""source"": ""ad706d71becb490094de1cb61bb8144f"",
      ""target"": ""6c36cd281fc64b119422eaece9c6696e""
    },
    {
      ""source"": ""406fce3c69714585a879749a9a436109"",
      ""target"": ""3bd5c9374aae4c1bbf6cb63250b6983d""
    },
    {
      ""source"": ""8f6fd7a964614d1eb8418d9bc8e36ebe"",
      ""target"": ""416eab3d2b294ce390321129f41080a8""
    }
  ]
}",,,,,,
ROOT_SPEC_ID,,,"{""spec_name"": ""ROOT""}",,,,
82121faef295492ca0d32af6d21d9b89,,,"{""time_stamp"": ""06-13-2024 at 09:31:33 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a new column 'rater_mean' which is the average of the 'rater1' and 'rater2' columns."", ""spec_name"": ""skin_tone_average"", ""trans_verb"": [""derive""], ""code"": ""df['rater_mean'] = (df['rater1'] + df['rater2']) / 2"", ""rationale"": ""To have a single skin tone rating variable based on the two rater columns."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1"", ""rater2""], ""rater_mean""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}], ""annotator"": null}",,,,
ea4945fa39fd4800ad2aaf19415cb342,,,"{""time_stamp"": ""05-31-2024 at 06:11:38 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a new binary column 'skin_tone_binary' where if the average of 'rater1' and 'rater2' is greater than 3, it is assigned 1 (dark skin tone), else 0 (light skin tone)."", ""spec_name"": ""skin_tone_average_binary"", ""trans_verb"": [""derive""], ""code"": ""df['skin_tone_binary'] = np.where(df['rater_mean'] > 3, 1, 0) "", ""rationale"": ""To categorize players into binary skin tone groups."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater_mean""], ""skin_tone_binary""]], ""branches"": [{""dependencies"": [""82121faef295492ca0d32af6d21d9b89""], ""condition"": """"}]}",,,,
52cf40d969fb44c6910a2f0df44b47a6,,,"{""time_stamp"": ""06-13-2024 at 09:32:17 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Calculate player age by subtracting the year part of the 'birthday' column from 2013. Create a new column 'age'."", ""spec_name"": ""calculate_age"", ""trans_verb"": [""derive""], ""code"": ""df['age'] = 2013 - pd.to_datetime(df['birthday']).dt.year"", ""rationale"": ""To include age as a control variable."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""birthday""], ""age""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}], ""annotator"": null}",,,,
5a98a0a59d0f4726b566b57b1ac1e951,,,"{""time_stamp"": ""06-13-2024 at 09:32:40 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Calculate player BMI using the formula weight / (height/100)^2. Create a new column 'bmi'."", ""spec_name"": ""calculate_bmi"", ""trans_verb"": [""derive""], ""code"": ""df['bmi'] = df['weight'] / (df['height']/100)**2"", ""rationale"": ""To include BMI as a control variable."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""height"", ""weight""], ""bmi""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}], ""annotator"": null}",,,,
d1110208133b4225a2ffa69f1f5f3418,,,"{""time_stamp"": ""05-31-2024 at 12:47:51 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Grand-mean center all predictors and covariates"", ""spec_name"": ""Center_columns"", ""trans_verb"": [""derive""], ""code"": ""cols_to_center = ['height', 'weight', 'games', 'age', \""victories\"", \""defeats\"", \""goals\"", 'meanIAT', 'meanExp']\ndf[['height_c', 'weight_c', 'games_c', 'age_c', \""victories_c\"", \""defeats_c\"", \""goals_c\"", 'meanIAT_c', 'meanExp_c']] = df[cols_to_center] - df[cols_to_center].mean()"", ""rationale"": ""To standardize variables for better interpretability in models."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""height""], ""height_c""], [[""weight""], ""weight_c""], [[""games""], ""games_c""], [[""age""], ""age_c""], [[""victories""], ""victories_c""], [[""defeats""], ""defeats_c""], [[""goals""], ""goals_c""]], ""branches"": [{""dependencies"": [""52cf40d969fb44c6910a2f0df44b47a6""], ""condition"": """"}]}",,,,
b0412a0acb1a4dadb224cc479bf9ba07,,,"{""time_stamp"": ""05-31-2024 at 06:00:11 PM"", ""tags"": [""T20""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Recode the 'position' variable into 4 categories - 'goalkeeper', 'defender', 'midfielder', 'forward/winger'. Create a new column 'position_recoded'."", ""spec_name"": ""recode_position_1"", ""trans_verb"": [""derive""], ""code"": ""position_map = {\n        'Goalkeeper': 'goalkeeper',\n        'Left Fullback': 'defender', \n        'Right Fullback': 'defender',\n        'Center Back': 'defender',\n        'Defensive Midfielder': 'midfielder',\n        'Center Midfielder': 'midfielder', \n        'Attacking Midfielder': 'midfielder',\n        'Left Midfielder': 'midfielder',\n        'Right Midfielder': 'midfielder',\n        'Left Winger': 'forward/winger',\n        'Right Winger': 'forward/winger', \n        'Center Forward': 'forward/winger'\n    }\ndf['position_recoded_1'] = df['position'].map(position_map)"", ""rationale"": ""To reduce the number of position categories for modeling."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""position""], ""position_recoded_1""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
5e616bd092f9477bb93555a685fcd522,,,"{""time_stamp"": ""05-30-2024 at 05:40:45 PM"", ""tags"": [""t1""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create squared values of the 'height', 'weight', and derived 'age' columns as additional control variables."", ""spec_name"": ""add_squared_control_variables"", ""trans_verb"": [""derive""], ""code"": ""df['height_squared'] = df['height'] ** 2\ndf['weight_squared'] = df['weight'] ** 2\ndf['age_squared'] = df['age'] ** 2"", ""rationale"": ""Add them as additional controls."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""height""], ""height_squared""], [[""weight""], ""weight_squared""], [[""age""], ""age_squared""]], ""branches"": [{""dependencies"": [""52cf40d969fb44c6910a2f0df44b47a6""], ""condition"": """"}]}",,,,
88a0383223d948338bda9cba4b51aaeb,,,"{""time_stamp"": ""06-13-2024 at 09:33:17 PM"", ""tags"": [""t2""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create multiple versions of the skin tone rating, including the minimum, maximum, mean, first rating, and second rating for each player."", ""spec_name"": ""skin_tone_min_max_recoded"", ""trans_verb"": [""derive""], ""code"": ""df['min_skin_tone'] = df[['rater1', 'rater2']].min(axis=1)\ndf['max_skin_tone'] = df[['rater1', 'rater2']].max(axis=1)\ndf['rater1_recoded'] = df['rater1'] - 1\ndf['rater2_recoded'] = df['rater2'] - 1"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1"", ""rater2""], ""min_skin_tone""], [[""rater1"", ""rater2""], ""max_skin_tone""], [[""rater1""], ""rater1_recoded""], [[""rater2""], ""rater2_recoded""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}], ""annotator"": null}",,,,
19388e9346294fbbaf17a2fd6b4d71af,,,"{""time_stamp"": ""06-09-2024 at 07:21:19 AM"", ""tags"": [""t2""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a binary variable 'dark_skin_tone' that indicates whether a player has a dark skin tone based on their average skin tone rating. A player is considered to have a dark skin tone if their average rating is 4 or 5."", ""spec_name"": ""create_binary_dark_skin_tone"", ""trans_verb"": [""derive""], ""code"": ""df['mean_skin_tone'] = (df['rater1_recoded'] + df['rater2_recoded']) / 2\ndf['dark_skin_tone'] = df['mean_skin_tone'].apply(lambda x: 1 if x >= 4 else 0)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater2_recoded"", ""rater1_recoded""], ""dark_skin_tone""]], ""branches"": [{""dependencies"": [""88a0383223d948338bda9cba4b51aaeb""], ""condition"": """"}], ""annotator"": null}",,,,
d5da7998b05f45dabf7705ea74361176,,,"{""time_stamp"": ""05-31-2024 at 06:10:34 PM"", ""tags"": [""t3""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Round the skin tone ratings average to the nearest integer to create a single, conservative skin tone rating variable."", ""spec_name"": ""skin_tone_average_round"", ""trans_verb"": [""derive""], ""code"": ""df['rater_mean_rounded'] = round(df['rater_mean'])"", ""rationale"": ""Team 3: The rater1 and rater2 variables were averaged and rounded to the most central value. This way we could work with only one variable for player skin tone, assuming a conservative rating when the raters didn't agree. The new, averaged variable agreed with 83% of the ratings from rater1 and with 93% from rater2."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater_mean""], ""rater_mean_rounded""]], ""branches"": [{""dependencies"": [""82121faef295492ca0d32af6d21d9b89""], ""condition"": """"}]}",,,,
d9bb30e3b3274e9f9c65d94882db824a,,,"{""time_stamp"": ""05-30-2024 at 06:20:38 PM"", ""tags"": [""t4""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a new variable 'red_cards_per_game' by dividing the number of red cards a player received from a referee by the number of games they played together."", ""spec_name"": ""create_red_cards_per_game"", ""trans_verb"": [""derive""], ""code"": ""df['red_cards_per_game'] = df['redCards'] / df['games']"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards"", ""games""], ""red_cards_per_game""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
8f64dd94caed43f3a784c42cf90770ab,,,"{""time_stamp"": ""05-31-2024 at 06:12:18 PM"", ""tags"": [""t5""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Calculate the average of the two skin tone ratings ('rater1' and 'rater2') for each player and rescale the result to a range between 0 and 1, where 0 corresponds to the original value of 1 (lightest skin tone) and 1 corresponds to the original value of 5 (darkest skin tone)."", ""spec_name"": ""skin_tone_average_rescale"", ""trans_verb"": [""derive""], ""code"": ""df['rater_mean_rescaled'] = (df['rater_mean'] - 1) / 4\ndf['rater_mean_centered'] = df['rater_mean'] - df['rater_mean'].mean()"", ""rationale"": ""This was done so that the difference between brightest and darkest players could later on be read off the regression coefficients directly."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater_mean""], ""rater_mean_rescaled""], [[""rater_mean""], ""rater_mean_centered""]], ""branches"": [{""dependencies"": [""82121faef295492ca0d32af6d21d9b89""], ""condition"": """"}]}",,,,
42b44f1271bb424c8ea4e6fb95c35538,,,"{""time_stamp"": ""05-30-2024 at 06:44:59 PM"", ""tags"": [""t8""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Collapse the data across the 'playerShort' variable, keeping the average skin tone rating for each player. This results in a dataset with one row per unique player."", ""spec_name"": ""collapse_data_by_player"", ""trans_verb"": [""rollup""], ""code"": ""df = df_summed_grp.agg(rater1_mean=('rater1', 'mean'), rater2_mean=('rater2', 'mean'))"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1""], ""rater1_mean""], [[""rater2""], ""rater2_mean""]], ""branches"": [{""dependencies"": [""57f409ce4b094b578d85a4b9b0fe8493""], ""condition"": """"}]}",,,,
57f409ce4b094b578d85a4b9b0fe8493,,,"{""time_stamp"": ""05-30-2024 at 06:37:31 PM"", ""tags"": [""t8""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Groupby the dataset upon the playshort column to prepare for the following agg transformation."", ""spec_name"": ""group_by_playershort"", ""trans_verb"": [""groupby""], ""code"": ""df_summed = df.groupby('playerShort', as_index=False)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""playerShort""], """"]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
1bd8dbeeb6e64196aabd65557edef8ae,,,"{""time_stamp"": ""05-30-2024 at 11:52:56 PM"", ""tags"": [""t9""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""This transformation changes the dependent variable (DV) to a binary variable"", ""spec_name"": ""redCards_binary_3"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_binary_3'] = (df['redCards'] > 0).astype(int)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards""], ""redCards_binary_3""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
fe93c2f7b9224c51805c01a816c8aa8e,,,"{""time_stamp"": ""05-30-2024 at 06:59:06 PM"", ""tags"": [""t10""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Calculate the age of each player (in days) as of January 1, 2013, using their birthday."", ""spec_name"": ""player_age_days"", ""trans_verb"": [""derive""], ""code"": ""df['player_age_days'] = (pd.to_datetime('2013-01-01') - pd.to_datetime(df['birthday'])).dt.days"", ""rationale"": ""irthday was used to calculate player age (in days) as of 1/1/2013 to evaluate whether this was confounded with skin tone."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""birthday""], ""player_age_days""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
bca7328d9ecf41f390d735cb331d4a6d,,,"{""time_stamp"": ""05-30-2024 at 07:01:07 PM"", ""tags"": [""t10""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Groupby dataframe by \""club\"" variable"", ""spec_name"": ""groupby_club"", ""trans_verb"": [""groupby""], ""code"": ""df_club_agg = df.groupby('club', as_index=False).agg({\n        'rater1': 'mean',\n        'rater2': 'mean',\n        'goals': 'sum',\n        'games': 'sum',\n        'defeats': 'sum'\n    })"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""club""], """"]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
a578e53007ea44b6bc3fc5d368dce254,,,"{""time_stamp"": ""05-30-2024 at 07:13:47 PM"", ""tags"": [""t10""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Calculate aggregate variables at the club level, including mean skin tone, mean goals per game, and mean losing percentage."", ""spec_name"": ""aggregate_club_level_variables"", ""trans_verb"": [""rollup""], ""code"": ""df_club_agg['club_mean_skin_tone'] = (df_club_agg['rater1'] + df_club_agg['rater2']) / 2\ndf_club_agg['club_goals_per_game'] = df_club_agg['goals'] / df_club_agg['games']\ndf_club_agg['club_losing_percentage'] = df_club_agg['defeats'] / df_club_agg['games']\ndf = pd.merge(df, df_club_agg[['club', 'club_mean_skin_tone', 'club_goals_per_game', 'club_losing_percentage']], on='club', how='left')\n"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1"", ""rater2""], ""club_mean_skin_tone""], [[""games"", ""goals""], ""club_goals_per_game""], [[""games"", ""defeats""], ""club_losing_percentage""]], ""branches"": [{""dependencies"": [""bca7328d9ecf41f390d735cb331d4a6d""], ""condition"": """"}]}",,,,
495b7db3b6274b81bda8277e0a69a11e,,,"{""time_stamp"": ""05-30-2024 at 08:35:56 PM"", ""tags"": [""t10""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Categorize players into \""Non-African-appearing\"" (mean skin tone rating < 3) and \""African-appearing\"" (mean skin tone rating > 3) based on their mean skin tone ratings."", ""spec_name"": ""categorize_skin_tone"", ""trans_verb"": [""derive""], ""code"": ""df['skin_tone_category'] = df['rater_mean'].apply(lambda x: 'African-appearing' if x > 3 else 'Non-African-appearing')"", ""rationale"": ""This was based on a visual inspection of the players sorted into the different skin tone categories and was intended to provide a more focused test of the IAT and explicit prejudice hypotheses which were built specifically on attitudes toward blacks."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater_mean""], ""skin_tone_category""]], ""branches"": [{""dependencies"": [""82121faef295492ca0d32af6d21d9b89""], ""condition"": """"}]}",,,,
8dad2bee4e0d4113b2e2ee6848449f6c,,,"{""time_stamp"": ""05-30-2024 at 08:49:59 PM"", ""tags"": [""t11""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create 12 new binary variables to represent each of the 12 positions listed in the 'position' variable. For each new variable, players are assigned a 1 if it is their position and a 0 if it is not."", ""spec_name"": ""position_dummy"", ""trans_verb"": [""derive""], ""code"": ""one_hot = pd.get_dummies(df['position'], prefix='position')\ndf = pd.concat([df, one_hot], axis=1)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""position""], ""position_Attacking Midfielder""], [[""position""], ""position_Center Forward""], [[""position""], ""position_Center Midfielder""], [[""position""], ""position_Center Back""], [[""position""], ""position_Defensive Midfielder""], [[""position""], ""position_Goalkeeper""], [[""position""], ""position_Left Fullback""], [[""position""], ""position_Left Midfielder""], [[""position""], ""position_Left Winger""], [[""position""], ""position_Right Fullback""], [[""position""], ""position_Right Midfielder""], [[""position""], ""position_Right Winger""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
edccb89484aa4bc2a17639c1c7402628,,,"{""time_stamp"": ""05-30-2024 at 08:49:27 PM"", ""tags"": [""t11""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create 4 new binary variables to represent each of the 4 countries listed in the 'leagueCountry' variable. For each new variable, players are assigned a 1 if it is their club's country and a 0 if it is not."", ""spec_name"": ""country_dummy"", ""trans_verb"": [""derive""], ""code"": ""one_hot = pd.get_dummies(df['leagueCountry'], prefix='leagueCountry')\ndf = pd.concat([df, one_hot], axis=1)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""leagueCountry""], ""leagueCountry_England""], [[""leagueCountry""], ""leagueCountry_France""], [[""leagueCountry""], ""leagueCountry_Germany""], [[""leagueCountry""], ""leagueCountry_Spain""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
305d5a25e82c47feb68351838deb7aa6,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""IV"", ""concept"": ""Rating of player's skin tone"", ""final_columns_derived_spec_ids"": [""495b7db3b6274b81bda8277e0a69a11e"", ""ROOT_SPEC_ID"", ""88a0383223d948338bda9cba4b51aaeb"", ""a578e53007ea44b6bc3fc5d368dce254"", ""d5da7998b05f45dabf7705ea74361176"", ""2b508b8bd61a4796882235cd6e7a92ac"", ""6ddfa30e0de34a1caed8d1fc7de07295"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""bca7328d9ecf41f390d735cb331d4a6d"", ""8f64dd94caed43f3a784c42cf90770ab"", ""8f6fd7a964614d1eb8418d9bc8e36ebe"", ""19388e9346294fbbaf17a2fd6b4d71af"", ""42b44f1271bb424c8ea4e6fb95c35538"", ""3efb9481beac461693817c01a9cf2abd"", ""416eab3d2b294ce390321129f41080a8"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 min_skin_tone"", ""\ud83d\udfe9 max_skin_tone"", ""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 skin_tone_category"", ""\ud83d\udfe9 dark_skin_tone"", ""\ud83d\udfe9 club_mean_skin_tone"", ""\ud83d\udfe9 dark_skin_tone_4"", ""\ud83d\udfe9 dark_skin_tone_5"", ""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 rater_mean_z"", ""\ud83d\udfe9 rater_mean_rounded"", ""\ud83d\udfe9 rater_mean_rescaled"", ""\ud83d\udfe9 rater_mean_centered"", ""\ud83d\udfe9 rater_mean_collapsed""], ""final_columns_leaf_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""88a0383223d948338bda9cba4b51aaeb"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""495b7db3b6274b81bda8277e0a69a11e"", ""19388e9346294fbbaf17a2fd6b4d71af"", ""a578e53007ea44b6bc3fc5d368dce254"", ""6ddfa30e0de34a1caed8d1fc7de07295"", ""6ddfa30e0de34a1caed8d1fc7de07295"", ""82121faef295492ca0d32af6d21d9b89"", ""416eab3d2b294ce390321129f41080a8"", ""d5da7998b05f45dabf7705ea74361176"", ""8f64dd94caed43f3a784c42cf90770ab"", ""8f64dd94caed43f3a784c42cf90770ab"", ""2b508b8bd61a4796882235cd6e7a92ac"", ""3efb9481beac461693817c01a9cf2abd""], ""column_rationales"": {""\ud83d\udfe9 min_skin_tone"": ""Variation of skin tone rating"", ""\ud83d\udfe9 max_skin_tone"": ""Variation of skin tone rating"", ""\ud83d\udfe9 skin_tone_category"": ""Variation of skin tone rating"", ""\ud83d\udfe9 club_mean_skin_tone"": ""Variation of skin tone rating"", ""\ud83d\udfe9 meanExp_skin_tone_interaction"": ""Interaction term between skin tone and meanExp"", ""\ud83d\udfe9 meanIAT_skin_tone_interaction"": ""Interaction term between skin tone and meanIAT"", ""\ud83d\udfe9 dark_skin_tone"": ""Variation of skin tone rating"", ""\ud83d\udfe9 skin_tone_binary"": ""Variation of skin tone rating"", ""\ud83d\udfe9 mean_skin_tone"": """", ""\ud83d\udfe9 dark_skin_tone_4"": ""Variation of skin tone rating"", ""\ud83d\udfe9 dark_skin_tone_5"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater1_z"": """", ""\ud83d\udfe9 rater_mean"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater_mean_rounded"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater_mean_centered"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater_mean_z"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater_mean_rescaled"": ""Variation of skin tone rating"", ""\ud83d\udfe9 rater_mean_collapsed"": ""Variation of skin tone rating""}, ""interaction"": false, ""rationale"": """", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
d4dc926e2dfa443d911b8712582257e2,,"{""time_stamp"": ""06-11-2024 at 07:11:05 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""DV"", ""concept"": ""Red Cards Received"", ""final_columns_derived_spec_ids"": [""6c36cd281fc64b119422eaece9c6696e"", ""1bd8dbeeb6e64196aabd65557edef8ae"", ""d9bb30e3b3274e9f9c65d94882db824a"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""ROOT_SPEC_ID"", ""ad706d71becb490094de1cb61bb8144f"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""a3704d1d9dfe4a28843f8930d7ef45f1""], ""final_columns_orig"": [""\ud83d\udfe8 redCards""], ""final_columns_derived"": [""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 redCards_binary_3"", ""\ud83d\udfe9 red_cards_per_game"", ""\ud83d\udfe9 received_red_cards_dichotomized""], ""final_columns_leaf_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""1bd8dbeeb6e64196aabd65557edef8ae"", ""d9bb30e3b3274e9f9c65d94882db824a"", ""6c36cd281fc64b119422eaece9c6696e""], ""column_rationales"": {""\ud83d\udfe9 redCards_binary"": ""There were very few instances with 2 redcards to begin with"", ""\ud83d\udfe9 redCards_binary_2"": ""Variation of red card variable"", ""\ud83d\udfe9 red_cards_per_game"": ""Accounting for the number of games"", ""\ud83d\udfe9 binary_redCards"": ""Variation of red card variable"", ""\ud83d\udfe9 redCards_binary_1"": ""Variation of red card variable (few redCards values = 2)"", ""\ud83d\udfe9 redCards_binary_3"": ""Variation of red card variable"", ""\ud83d\udfe9 redCards_yellowCards_per_game"": ""Accounting for the yellow cards"", ""\ud83d\udfe9 received_red_card"": ""Accounting for the yellow cards"", ""\ud83d\udfe8 redCards"": ""Original red cards variable"", ""\ud83d\udfe9 received_red_cards_dichotomized"": ""Dichotomized the red card data at the player level""}, ""interaction"": false, ""rationale"": """", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
a3704d1d9dfe4a28843f8930d7ef45f1,,,"{""time_stamp"": ""05-30-2024 at 11:50:16 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Transform the 'redCards' column into a binary variable, where if 'redCards' is greater than 0, the new column 'redCards_binary' is assigned 1, else 0."", ""spec_name"": ""redCards_binary_1"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_binary_1'] = np.where(df['redCards'] > 0, 1, 0)"", ""rationale"": ""To convert red cards to a binary outcome variable."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards""], ""redCards_binary_1""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
28283f23f2f548488e2b13a9b72f3c0d,,,"{""time_stamp"": ""05-30-2024 at 11:51:58 PM"", ""tags"": [""t2""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Transform the 'redCards' variable into a binary variable, where 1 indicates that a player received at least one red card from a referee, and 0 indicates that they received no red cards."", ""spec_name"": ""redCards_binary_2"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_binary_2'] = df['redCards'].apply(lambda x: 1 if x > 0 else 0)"", ""rationale"": ""There were very few instances with 2 redcards to begin with."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards""], ""redCards_binary_2""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
a584791866ee47acbd658e85ef88b402,,,"{""time_stamp"": ""05-30-2024 at 11:58:57 PM"", ""tags"": [""t14""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a new variable 'total_red_and_yellow_red_cards' by summing the number of red cards ('redCards') and yellow-red cards ('yellowReds') within each player-referee dyad."", ""spec_name"": ""total_red_and_yellow_red_cards"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_yellowCards_total'] = df['redCards'] + df['yellowReds']"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""yellowReds"", ""redCards""], ""redCards_yellowCards_total""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
7b8c82026519441f8043b19997cbba82,,,"{""time_stamp"": ""05-31-2024 at 12:00:33 AM"", ""tags"": [""t14""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a new variable 'red_and_yellow_red_cards_per_game' by dividing the total number of red and yellow-red cards ('total_red_and_yellow_red_cards') by the number of games ('games') within each player-referee dyad."", ""spec_name"": ""red_and_yellow_red_cards_per_game"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_yellowCards_per_game'] = df['redCards_yellowCards_total'] / df['games']\n"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards_yellowCards_total"", ""games""], ""redCards_yellowCards_per_game""]], ""branches"": [{""dependencies"": [""a584791866ee47acbd658e85ef88b402""], ""condition"": """"}]}",,,,
6ddfa30e0de34a1caed8d1fc7de07295,,,"{""time_stamp"": ""05-31-2024 at 12:05:32 AM"", ""tags"": [""t14""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Create a binary variable 'dark_skin_tone_4' taking the value 1 for players whom at least one of the raters has indicated the skin tone to be equal to 4 (5) or more, and 0 if both raters indicated the player's skin tone to be below 4 (5). "", ""spec_name"": ""skin_tone_binary_4_and_5"", ""trans_verb"": [""derive""], ""code"": ""df['dark_skin_tone_4'] = ((df[['rater1', 'rater2']] >= 4).any(axis=1)).astype(int)\ndf['dark_skin_tone_5'] = ((df[['rater1', 'rater2']] == 5).any(axis=1)).astype(int)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1"", ""rater2""], ""dark_skin_tone_4""], [[""rater1"", ""rater2""], ""dark_skin_tone_5""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
ad706d71becb490094de1cb61bb8144f,,,"{""time_stamp"": ""06-11-2024 at 07:08:10 PM"", ""tags"": [""t16""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""For the first research question, dichotomize the red card data at the player level. Aggregate the data to the level of each individual player such that each record in the dataset represents a unique player, and the dichotomized outcome variable 'received_red_card' indicates whether the player has ever received a red (or yellow-red) card throughout the games represented in the dataset."", ""spec_name"": ""dichotomize_red_card_data_player_level_1"", ""trans_verb"": [""rollup""], ""code"": ""df = df_summed_grp.agg({\n        'redCards': lambda x: (x > 0).any(),\n        'yellowReds': lambda x: (x > 0).any()\n    }).reset_index()\ndf = df.rename(columns={'redCards': 'redCards_dischotomized', 'yellowReds': 'yellowReds_dischotomized'})"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards""], ""redCards_dischotomized""], [[""yellowReds""], ""yellowReds_dischotomized""]], ""branches"": [{""dependencies"": [""57f409ce4b094b578d85a4b9b0fe8493""], ""condition"": """"}], ""annotator"": null}",,,,
406fce3c69714585a879749a9a436109,,,"{""time_stamp"": ""06-09-2024 at 07:15:36 PM"", ""tags"": [""t16""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""apply an inverse transformation to the 'goals' variable aggregated at the level of the unique player to correct positive skewness."", ""spec_name"": ""aggregate_by_goals"", ""trans_verb"": [""rollup""], ""code"": ""df_summed = df_summed_grp['goals'].sum().reset_index()\ndf_summed.columns = ['id', 'playerShort', 'total_goals']\ndf = pd.merge(df, df_summed[['playerShort', 'total_goals']], on='playerShort', how='left')\n   "", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""goals""], ""total_goals""]], ""branches"": [{""dependencies"": [""57f409ce4b094b578d85a4b9b0fe8493""], ""condition"": """"}], ""annotator"": null}",,,,
8f6fd7a964614d1eb8418d9bc8e36ebe,,,"{""time_stamp"": ""05-31-2024 at 12:29:04 AM"", ""tags"": [""t17""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Z-transform the skin tone scores from the two raters ('rater1' and 'rater2') "", ""spec_name"": ""skin_tone_z_transform"", ""trans_verb"": [""derive""], ""code"": ""df['rater1_z'] = (df['rater1'] - df['rater1'].mean()) / df['rater1'].std()\ndf['rater2_z'] = (df['rater2'] - df['rater2'].mean()) / df['rater2'].std()\n"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1""], ""rater1_z""], [[""rater2""], ""rater2_z""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
416eab3d2b294ce390321129f41080a8,,,"{""time_stamp"": ""05-31-2024 at 06:13:59 PM"", ""tags"": [""t17""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""z_transform_and_average_skin_tone_scores Specification: Z-transform the skin tone scores from the two raters ('rater1' and 'rater2') and then average them to represent the skin tone ratings with a single predictor."", ""spec_name"": ""skin_tone_z_transform_average"", ""trans_verb"": [""derive""], ""code"": ""df['rater_mean_z'] = (df['rater1_z'] + df['rater2_z']) / 2"", ""rationale"": ""To have a single skin tone rating variable based on the two rater columns."", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater1_z"", ""rater2_z""], ""rater_mean_z""]], ""branches"": [{""dependencies"": [""8f6fd7a964614d1eb8418d9bc8e36ebe""], ""condition"": """"}]}",,,,
d6ea8dc6496443398a7fe03b45eb49c8,,,"{""time_stamp"": ""05-31-2024 at 12:40:58 AM"", ""tags"": [""t20""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Compute the number of yellow cards received per game for each player."", ""spec_name"": ""yellowCards_per_game"", ""trans_verb"": [""derive""], ""code"": ""df['yellowCards_per_game'] = df['yellowCards'] / df['games']"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""yellowCards""], ""yellowCards_per_game""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
f2a325eddd624412a702e04960338283,,,"{""time_stamp"": ""05-31-2024 at 12:52:33 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Standardizing all predictors and covariates"", ""spec_name"": ""Standardize_columns"", ""trans_verb"": [""derive""], ""code"": ""cols_to_standardize = ['height_c', 'weight_c', 'games_c', 'age_c', 'victories_c', 'defeats_c', 'goals_c', 'meanIAT_c', 'meanExp_c']\ndf[['height_st', 'weight_st', 'games_st', 'age_st', 'victories_st', 'defeats_st', 'goals_st', 'meanIAT_st', 'meanExp_st']] = df[cols_to_standardize] / df[cols_to_standardize].std()"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""height_c""], ""height_st""], [[""weight_c""], ""weight_st""], [[""games_c""], ""games_st""], [[""age_c""], ""age_st""], [[""victories_c""], ""victories_st""], [[""defeats_c""], ""defeats_st""], [[""goals_c""], ""goals_st""]], ""branches"": [{""dependencies"": [""d1110208133b4225a2ffa69f1f5f3418""], ""condition"": """"}]}",,,,
2b508b8bd61a4796882235cd6e7a92ac,,,"{""time_stamp"": ""05-31-2024 at 06:12:39 PM"", ""tags"": [""t23""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Construct a variable 'skintone' by averaging 'rater1' and 'rater2'. This variable is considered as a continuous variable and is centered around the mean in the final analysis."", ""spec_name"": ""skin_tone_average_center"", ""trans_verb"": [""derive""], ""code"": ""df['rater_mean_centered'] = df['rater_mean'] - df['rater_mean'].mean()"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater_mean""], ""rater_mean_centered""]], ""branches"": [{""dependencies"": [""82121faef295492ca0d32af6d21d9b89""], ""condition"": """"}]}",,,,
9b164686705048849bedde630fb475bd,,,"{""time_stamp"": ""06-13-2024 at 09:35:17 PM"", ""tags"": [""t23""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""ecode the data from player-ref dyads per row into single games per row, with the 'allreds' variable becoming a binary variable. The sum of 'allreds' for each player-ref dyad remains the same as before recoding."", ""spec_name"": ""recode_read_cards_by_game"", ""trans_verb"": [""derive""], ""code"": ""df['redCards_yellowCards_total_binary'] = (df['redCards_yellowCards_total'] > 0).astype(int)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards_yellowCards_total""], ""redCards_yellowCards_total_binary""]], ""branches"": [{""dependencies"": [""a584791866ee47acbd658e85ef88b402""], ""condition"": """"}], ""annotator"": null}",,,,
b08ce3bdd47b4118917c901505ac6207,,,"{""time_stamp"": ""06-13-2024 at 09:36:01 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": """", ""spec_name"": ""red_and_yellow_Cards_game_level"", ""trans_verb"": [""derive""], ""code"": ""df['red_yellow_cumsum'] = ((df['yellowReds'] + df['redCards']).groupby(level=0).cumsum() > 0).astype(int)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""yellowReds"", ""redCards""], ""red_yellow_cumsum""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}], ""annotator"": null}",,,,
668078746b694f518c91a5909be4b145,,,"{""time_stamp"": ""05-31-2024 at 06:05:24 PM"", ""tags"": [""t28""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Reduce the number of levels of the 'position' variable by collapsing \""Left Fullback\"", \""Right Fullback\"", and \""Center Back\"" to \""Back\"", \""Left Midfielder\"", \""Right Midfielder\"", \""Center Midfielder\"", \""Attacking Midfielder\"", and \""Defensive Midfielder\"" to \""Middle\"", and so on."", ""spec_name"": ""recode_position_2"", ""trans_verb"": [""derive""], ""code"": ""position_mapping = {\n        'Left Fullback': 'Back', 'Right Fullback': 'Back', 'Center Back': 'Back',\n        'Left Midfielder': 'Middle', 'Right Midfielder': 'Middle', 'Center Midfielder': 'Middle',\n        'Attacking Midfielder': 'Middle', 'Defensive Midfielder': 'Middle',\n        'Left Winger': 'Front', 'Right Winger': 'Front', 'Center Forward': 'Front'\n    }\ndf['position_recoded_2'] = df['position'].map(position_mapping)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""position""], ""position_recoded_2""]], ""branches"": [{""dependencies"": [""ROOT_SPEC_ID""], ""condition"": """"}]}",,,,
b248c2688b5d4e8ea182961eebfa2868,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player Height"", ""final_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""ROOT_SPEC_ID"", ""f2a325eddd624412a702e04960338283""], ""final_columns_orig"": [""\ud83d\udfe8 height""], ""final_columns_derived"": [""\ud83d\udfe9 height_c"", ""\ud83d\udfe9 height_st"", ""\ud83d\udfe9 height_squared""], ""final_columns_leaf_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""f2a325eddd624412a702e04960338283"", ""5e616bd092f9477bb93555a685fcd522""], ""column_rationales"": {""\ud83d\udfe9 height_squared"": ""Added a non-linear term"", ""\ud83d\udfe9 height_c"": ""Center the value of heigh"", ""\ud83d\udfe9 height_st"": ""Standardize the value of height"", ""\ud83d\udfe8 height"": ""Original value of height""}, ""interaction"": false, ""rationale"": ""We controlled for height and weight because conceivably, bigger players may have more advantage fighting for position and thus be more likely to engage in bodily contact, which may increase the chance of committing fouls (and thus, receiving red cards). /  "", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
324097f706ab48dfbffd4d27c5828c45,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player weight"", ""final_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""ROOT_SPEC_ID"", ""f2a325eddd624412a702e04960338283""], ""final_columns_orig"": [""\ud83d\udfe8 weight""], ""final_columns_derived"": [""\ud83d\udfe9 weight_c"", ""\ud83d\udfe9 weight_st"", ""\ud83d\udfe9 weight_squared""], ""final_columns_leaf_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""f2a325eddd624412a702e04960338283"", ""5e616bd092f9477bb93555a685fcd522""], ""column_rationales"": {""\ud83d\udfe8 weight"": ""Original value of weight"", ""\ud83d\udfe9 weight_c"": ""Center the value of weight"", ""\ud83d\udfe9 weight_st"": ""Standardize the value of weight"", ""\ud83d\udfe9 weight_squared"": ""Added a non-linear term""}, ""interaction"": false, ""rationale"": ""We controlled for height and weight because conceivably, bigger players may have more advantage fighting for position and thus be more likely to engage in bodily contact, which may increase the chance of committing fouls (and thus, receiving red cards). /  "", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
13e3517872874fc89c47629654eaae57,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player BMI"", ""final_columns_derived_spec_ids"": [""ROOT_SPEC_ID"", ""5a98a0a59d0f4726b566b57b1ac1e951""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 bmi""], ""final_columns_leaf_spec_ids"": [""5a98a0a59d0f4726b566b57b1ac1e951""], ""column_rationales"": {""\ud83d\udfe9 bmi"": ""The ratio of height and weight to represent bmi""}, ""interaction"": false, ""rationale"": ""Height and Weight were used to calculate BMI, which we thought provided a better measure of physical stature than either measure alone. "", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
bc4e909608b7444286ef4a38ccdcb8d5,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player age"", ""final_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""fe93c2f7b9224c51805c01a816c8aa8e"", ""5e616bd092f9477bb93555a685fcd522"", ""ROOT_SPEC_ID"", ""f2a325eddd624412a702e04960338283""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_c"", ""\ud83d\udfe9 age_st"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 player_age_days""], ""final_columns_leaf_spec_ids"": [""52cf40d969fb44c6910a2f0df44b47a6"", ""d1110208133b4225a2ffa69f1f5f3418"", ""f2a325eddd624412a702e04960338283"", ""5e616bd092f9477bb93555a685fcd522"", ""fe93c2f7b9224c51805c01a816c8aa8e""], ""column_rationales"": {""\ud83d\udfe9 age"": "" Transformed from birthday"", ""\ud83d\udfe9 age_c"": "" Transformed from birthday and centered"", ""\ud83d\udfe9 age_st"": "" Transformed from birthday and standardized"", ""\ud83d\udfe9 age_squared"": ""Non-linear term of age"", ""\ud83d\udfe9 player_age_days"": ""Use days to represent the age variable""}, ""interaction"": false, ""rationale"": ""Include in the model to examine if this is confounded with skin tone"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
63ad95cedc7d4008baa5144d53d6cf0f,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Number of games played by player"", ""final_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""ROOT_SPEC_ID"", ""f2a325eddd624412a702e04960338283""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 games_st""], ""final_columns_leaf_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""f2a325eddd624412a702e04960338283""], ""column_rationales"": {""\ud83d\udfe9 games_c"": ""Number of games played by player (centered)"", ""\ud83d\udfe9 games_st"": ""Number of games played by player (standardized)"", ""\ud83d\udfe9 club_goals_per_game"": ""Goals per game aggregated at club level""}, ""interaction"": false, ""rationale"": ""Captures player performance"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
f0bc357124514b67845479e67b2422b8,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Number of goals scored by player"", ""final_columns_derived_spec_ids"": [""ad706d71becb490094de1cb61bb8144f"", ""d1110208133b4225a2ffa69f1f5f3418"", ""ROOT_SPEC_ID"", ""a578e53007ea44b6bc3fc5d368dce254"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""bca7328d9ecf41f390d735cb331d4a6d"", ""3bd5c9374aae4c1bbf6cb63250b6983d"", ""f2a325eddd624412a702e04960338283"", ""406fce3c69714585a879749a9a436109"", ""52cf40d969fb44c6910a2f0df44b47a6""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 goals_c"", ""\ud83d\udfe9 goals_st"", ""\ud83d\udfe9 club_goals_per_game"", ""\ud83d\udfe9 inverse_goals""], ""final_columns_leaf_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""f2a325eddd624412a702e04960338283"", ""a578e53007ea44b6bc3fc5d368dce254"", ""3bd5c9374aae4c1bbf6cb63250b6983d""], ""column_rationales"": {""\ud83d\udfe9 club_goals_per_game"": ""Goals per game aggregated at club level"", ""\ud83d\udfe9 goals_c"": ""Number of goals centered"", ""\ud83d\udfe9 goals_st"": ""Number of goals standardized"", ""\ud83d\udfe9 inverse_goals"": ""Take the inverse to correct positive skewness""}, ""interaction"": false, ""rationale"": ""Captures player performance"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
92b90e8f9ee34d239ecbdd35df727402,,"{""time_stamp"": ""06-04-2024 at 05:36:59 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Number of yellow cards received by player"", ""final_columns_derived_spec_ids"": [""ROOT_SPEC_ID"", ""d6ea8dc6496443398a7fe03b45eb49c8""], ""final_columns_orig"": [""\ud83d\udfe8 yellowCards""], ""final_columns_derived"": [""\ud83d\udfe9 yellowCards_per_game""], ""final_columns_leaf_spec_ids"": [""d6ea8dc6496443398a7fe03b45eb49c8""], ""column_rationales"": {""\ud83d\udfe8 yellowCards"": ""Original yellow cards column"", ""\ud83d\udfe9 yellowCards_per_game"": ""Accounting for the number of games""}, ""interaction"": false, ""rationale"": ""Controlling for yellow cards helps isolate the effect of skin tone above and beyond any differences in general reckless behavior"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
9f3922f0f098403f9a78995db9c986ce,,"{""time_stamp"": ""06-04-2024 at 05:41:20 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player's league country"", ""final_columns_derived_spec_ids"": [""ROOT_SPEC_ID"", ""edccb89484aa4bc2a17639c1c7402628""], ""final_columns_orig"": [""\ud83d\udfe8 leagueCountry""], ""final_columns_derived"": [""\ud83d\udfe9 leagueCountry_England"", ""\ud83d\udfe9 leagueCountry_Spain"", ""\ud83d\udfe9 leagueCountry_France"", ""\ud83d\udfe9 leagueCountry_Germany""], ""final_columns_leaf_spec_ids"": [""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628""], ""column_rationales"": {""\ud83d\udfe9 leagueCountry_England"": ""Dummy variable representing England as league country"", ""\ud83d\udfe9 leagueCountry_Spain"": ""Dummy variable representing Spain as league country"", ""\ud83d\udfe9 leagueCountry_Germany"": ""Dummy variable representing Germany as league country"", ""\ud83d\udfe9 leagueCountry_France"": ""Dummy variable representing France as league country"", ""\ud83d\udfe8 leagueCountry"": ""Original league country variable""}, ""interaction"": false, ""rationale"": ""Control for league norms around aggressive play"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
9f752f9334984b3ca4d16836cb728436,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 rater_mean""], ""associated_columns_leaf_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""82121faef295492ca0d32af6d21d9b89""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
efa788f98bdb4b66aa10768a34d31469,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Poisson Regression"", ""spec_name"": ""poisson_regression"", ""rationale"": ""Poisson regression is suitable for modeling count outcomes, such as the number of red cards a player receives. It assumes that the log of the expected count is a linear combination of the predictors."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Poisson(soccer_data['redcards'], sm.add_constant(soccer_data[['skintone', 'position', 'height', 'weight', 'age', 'games', 'goals', 'yellowcards', 'league', 'club', 'referee']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""ROOT_SPEC_ID"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""82121faef295492ca0d32af6d21d9b89""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 skin_tone_binary""], ""associated_columns_leaf_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""ea4945fa39fd4800ad2aaf19415cb342""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
3bd5c9374aae4c1bbf6cb63250b6983d,,,"{""time_stamp"": ""06-09-2024 at 07:16:41 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""For the first research question, apply an inverse transformation to the 'goals' variable aggregated at the level of the unique player to correct positive skewness."", ""spec_name"": ""inverse_transform_goals_player_level"", ""trans_verb"": [""derive""], ""code"": ""df['inverse_goals'] = 1 / (df['total_goals'] + 1)"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""total_goals""], ""inverse_goals""]], ""branches"": [{""dependencies"": [""406fce3c69714585a879749a9a436109""], ""condition"": """"}], ""annotator"": null}",,,,
d04ea28e4b664868bceb43af61730251,,"{""time_stamp"": ""06-09-2024 at 02:23:28 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player position"", ""final_columns_derived_spec_ids"": [""8dad2bee4e0d4113b2e2ee6848449f6c"", ""668078746b694f518c91a5909be4b145"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 position_recoded_2"", ""\ud83d\udfe9 position_Goalkeeper"", ""\ud83d\udfe9 position_Left Winger"", ""\ud83d\udfe9 position_Center Back"", ""\ud83d\udfe9 position_Right Winger"", ""\ud83d\udfe9 position_Left Fullback"", ""\ud83d\udfe9 position_Right Fullback"", ""\ud83d\udfe9 position_Center Forward"", ""\ud83d\udfe9 position_Left Midfielder"", ""\ud83d\udfe9 position_Right Midfielder"", ""\ud83d\udfe9 position_Center Midfielder"", ""\ud83d\udfe9 position_Defensive Midfielder"", ""\ud83d\udfe9 position_Attacking Midfielder""], ""final_columns_leaf_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""668078746b694f518c91a5909be4b145"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c""], ""column_rationales"": {""\ud83d\udfe9 position_recoded_1"": ""One way to recode the position variable"", ""\ud83d\udfe9 position_recoded_2"": ""One way to recode the position variable"", ""\ud83d\udfe9 position_Goalkeeper"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Left Winger"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Right Winger"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Right Fullback"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Left Midfielder"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Center Midfielder"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Attacking Midfielder"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Defensive Midfielder"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Right Midfielder"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Center Forward"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Left Fullback"": ""One level of the position variable (dummy variable)"", ""\ud83d\udfe9 position_Center Back"": ""One level of the position variable (dummy variable)""}, ""interaction"": false, ""rationale"": ""Some roles (e.g., defenders) may be more prone to committing fouls that result in red cards"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
6164bb664cd24be7b708ebd4b4215036,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""DV"", ""concept"": ""Player's total cards"", ""final_columns_derived_spec_ids"": [""9b164686705048849bedde630fb475bd"", ""7b8c82026519441f8043b19997cbba82"", ""b08ce3bdd47b4118917c901505ac6207"", ""ROOT_SPEC_ID"", ""a584791866ee47acbd658e85ef88b402""], ""final_columns_orig"": [], ""final_columns_derived"": [""\ud83d\udfe9 red_yellow_cumsum"", ""\ud83d\udfe9 redCards_yellowCards_total"", ""\ud83d\udfe9 redCards_yellowCards_per_game"", ""\ud83d\udfe9 redCards_yellowCards_total_binary""], ""final_columns_leaf_spec_ids"": [""b08ce3bdd47b4118917c901505ac6207"", ""a584791866ee47acbd658e85ef88b402"", ""7b8c82026519441f8043b19997cbba82"", ""9b164686705048849bedde630fb475bd""], ""column_rationales"": {""\ud83d\udfe9 red_yellow_cumsum"": ""Accounting for yellow cards in cumulative sum"", ""\ud83d\udfe9 redCards_yellowCards_per_game"": ""Accounting for yellow cards per game"", ""\ud83d\udfe9 redCards_yellowCards_total"": ""Accounting for yellow cards in total"", ""\ud83d\udfe9 redCards_yellowCards_total_binary"": ""Accounting for yellow cards in total and binay""}, ""interaction"": false, ""rationale"": ""Accounting for yellow cards to serve as a measure of the overall severity and frequency of a player's misconduct or rule violations as judged by the referees"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
3efb9481beac461693817c01a9cf2abd,,,"{""time_stamp"": ""06-09-2024 at 03:22:17 AM"", ""tags"": [""t8""], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Collapse the data across the 'playerShort' variable, keeping the average skin tone rating for each player. This results in a dataset with one row per unique player."", ""spec_name"": ""collapse_data_by_player_2"", ""trans_verb"": [""rollup""], ""code"": ""df['rater_mean_collapsed'] = (df['rater1_mean'] + df['rater2_mean']) / 2"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""rater2_mean"", ""rater1_mean""], ""rater_mean_collapsed""]], ""branches"": [{""dependencies"": [""42b44f1271bb424c8ea4e6fb95c35538""], ""condition"": """"}], ""annotator"": null}",,,,
fed3358c80a748d3a5adb4b3744d732d,,"{""time_stamp"": ""06-09-2024 at 04:20:22 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player's club"", ""final_columns_derived_spec_ids"": [], ""final_columns_orig"": [""\ud83d\udfe8 club""], ""final_columns_derived"": [], ""final_columns_leaf_spec_ids"": [], ""column_rationales"": {""\ud83d\udfe8 club"": ""Original column of club can be directly used""}, ""interaction"": false, ""rationale"": ""Differences in playing style, tactics, or reputation among different clubs that could affect the likelihood of their players receiving red cards"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
a135c759bcbb41b18f4813f4399f14ac,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.formula.api as smf\nmodel = sm.OLS(df['redCards'], sm.add_constant(df['rateravg'])).fit()\n"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 rater_mean""], ""associated_columns_leaf_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""82121faef295492ca0d32af6d21d9b89""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
18cd7094bab4414c83b57f2b91666e18,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.formula.api as smf\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2']])).fit()\n"", ""associated_columns_derived_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 weight"", ""\ud83d\udfe8 height""], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared""], ""associated_columns_leaf_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""82121faef295492ca0d32af6d21d9b89"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
7e281dd41efb43bba7c486d21b9a0800,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
1586203651f448bda711057936926325,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position', 'club', 'referee']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
3438b5eedcb94b86adf804cbe870745b,,"{""time_stamp"": ""06-09-2024 at 05:15:59 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Referee ID "", ""final_columns_derived_spec_ids"": [], ""final_columns_orig"": [""\ud83d\udfe8 refNum""], ""final_columns_derived"": [], ""final_columns_leaf_spec_ids"": [], ""column_rationales"": {""\ud83d\udfe8 refNum"": ""Unique referee ID can be directly used""}, ""interaction"": false, ""rationale"": ""Unique referee ID number for mixed effects model"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
d9121ad3401d4e0f975c71844c1409c9,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position', 'club']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club""], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
3d2b04bf091e42528a43684e1845c02f,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club"", ""\ud83d\udfe8 redCards""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
4107c1348d2b4018905a5f358f5e294f,,,,"{""time_stamp"": ""06-09-2024 at 05:20:35 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""8f6fd7a964614d1eb8418d9bc8e36ebe"", ""416eab3d2b294ce390321129f41080a8"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 rater_mean_z""], ""associated_columns_leaf_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""416eab3d2b294ce390321129f41080a8""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
79b0327519f14b6a98d53b05d0df50da,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_2""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""28283f23f2f548488e2b13a9b72f3c0d""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
075621325a484de9b0c94b49c8b5351d,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""1bd8dbeeb6e64196aabd65557edef8ae"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_3""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""1bd8dbeeb6e64196aabd65557edef8ae""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
215a96a498b7493b8e5c133aeff659b5,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'height2', 'weight2', 'age', 'age2']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 height_c"", ""\ud83d\udfe9 weight_c"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""d1110208133b4225a2ffa69f1f5f3418"", ""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
b6fc1ebabfae409186e989a4cbecf6de,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'height2', 'weight2', 'age', 'age2', 'leagueCountry', 'position']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""f2a325eddd624412a702e04960338283"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 leagueCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 weight_st"", ""\ud83d\udfe9 height_st""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""f2a325eddd624412a702e04960338283"", ""f2a325eddd624412a702e04960338283""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
5ce2a06bbb8a4085a6c66ea54e698921,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'height2', 'weight2', 'age', 'age2', 'leagueCountry', 'position']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""edccb89484aa4bc2a17639c1c7402628"", ""f2a325eddd624412a702e04960338283"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 weight_st"", ""\ud83d\udfe9 height_st"", ""\ud83d\udfe9 leagueCountry_Spain"", ""\ud83d\udfe9 leagueCountry_France"", ""\ud83d\udfe9 leagueCountry_Germany"", ""\ud83d\udfe9 leagueCountry_England""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""f2a325eddd624412a702e04960338283"", ""f2a325eddd624412a702e04960338283"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
0e31df0c149b453bb2db92324fef311b,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'height2', 'weight2', 'age', 'age2', 'leagueCountry', 'position']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""edccb89484aa4bc2a17639c1c7402628"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""f2a325eddd624412a702e04960338283"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 weight_st"", ""\ud83d\udfe9 height_st"", ""\ud83d\udfe9 leagueCountry_Spain"", ""\ud83d\udfe9 leagueCountry_France"", ""\ud83d\udfe9 leagueCountry_Germany"", ""\ud83d\udfe9 leagueCountry_England"", ""\ud83d\udfe9 position_Goalkeeper"", ""\ud83d\udfe9 position_Left Winger"", ""\ud83d\udfe9 position_Center Back"", ""\ud83d\udfe9 position_Right Winger"", ""\ud83d\udfe9 position_Left Fullback"", ""\ud83d\udfe9 position_Right Fullback"", ""\ud83d\udfe9 position_Center Forward"", ""\ud83d\udfe9 position_Left Midfielder"", ""\ud83d\udfe9 position_Right Midfielder"", ""\ud83d\udfe9 position_Center Midfielder"", ""\ud83d\udfe9 position_Defensive Midfielder"", ""\ud83d\udfe9 position_Attacking Midfielder""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""f2a325eddd624412a702e04960338283"", ""f2a325eddd624412a702e04960338283"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c"", ""8dad2bee4e0d4113b2e2ee6848449f6c""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
30883779fb3647ce91178aac14b7df4c,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'height2', 'weight2', 'age', 'age2', 'leagueCountry', 'position']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""668078746b694f518c91a5909be4b145"", ""f2a325eddd624412a702e04960338283"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 leagueCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 weight_st"", ""\ud83d\udfe9 height_st"", ""\ud83d\udfe9 position_recoded_2""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""f2a325eddd624412a702e04960338283"", ""f2a325eddd624412a702e04960338283"", ""668078746b694f518c91a5909be4b145""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
05a0046977d04788af691a53761219d1,,"{""time_stamp"": ""06-09-2024 at 05:31:15 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""Control"", ""concept"": ""Player's name"", ""final_columns_derived_spec_ids"": [], ""final_columns_orig"": [""\ud83d\udfe8 playerShort""], ""final_columns_derived"": [], ""final_columns_leaf_spec_ids"": [], ""column_rationales"": {""\ud83d\udfe8 playerShort"": ""Original column can be used directly for names""}, ""interaction"": false, ""rationale"": ""Name as a unique identifier"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
2eeb358af75b4336a40d2c0710e45046,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Multilevel Binomial Logistic Regression"", ""spec_name"": ""multilevel_binomial_logistic_regression"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum']]).fit()\n"", ""associated_columns_derived_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 min_skin_tone""], ""associated_columns_leaf_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
c69faa9e41004946ab853803ed840661,,"{""time_stamp"": ""06-09-2024 at 05:35:13 AM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""variable_type"": ""IV"", ""concept"": ""Referee country ID number"", ""final_columns_derived_spec_ids"": [], ""final_columns_orig"": [""\ud83d\udfe8 refCountry""], ""final_columns_derived"": [], ""final_columns_leaf_spec_ids"": [], ""column_rationales"": {""\ud83d\udfe8 refCountry"": ""Referee country ID number can be used directly""}, ""interaction"": false, ""rationale"": ""Unique identifier used for multilevel models"", ""on"": """", ""random_effect"": false, ""annotator"": null}",,,,,
0c3b683a12814e73b45f232e4998521b,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Multilevel Binomial Logistic Regression"", ""spec_name"": ""multilevel_binomial_logistic_regression"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum', 'refCountry', 'skinTone']]).fit()"", ""associated_columns_derived_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum"", ""\ud83d\udfe8 refCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 max_skin_tone""], ""associated_columns_leaf_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
8cb9f8bf89fe4da591296a13d20e049f,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Generalized Linear Mixed Model with Binomial Error"", ""spec_name"": ""generalized_linear_mixed_model_with_binomial_error"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum', 'skinTone']]).fit()"", ""associated_columns_derived_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""19388e9346294fbbaf17a2fd6b4d71af"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 dark_skin_tone""], ""associated_columns_leaf_spec_ids"": [""19388e9346294fbbaf17a2fd6b4d71af""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
5d2bb5a86986447abeb4608fe9f04bc2,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Generalized Linear Mixed Model"", ""spec_name"": ""generalized_linear_mixed_model"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.MixedLM(df['redCards'], sm.add_constant(df[['skinTone', 'games', 'position', 'club']]), groups=df[['playerShort', 'refNum', 'club']]).fit()"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""88a0383223d948338bda9cba4b51aaeb"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""19388e9346294fbbaf17a2fd6b4d71af"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum"", ""\ud83d\udfe8 club""], ""associated_columns_derived"": [""\ud83d\udfe9 dark_skin_tone"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""19388e9346294fbbaf17a2fd6b4d71af"", ""d1110208133b4225a2ffa69f1f5f3418"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
1d851c2c207c4ef79af7b1c799a987ff,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Zero-Inflated Poisson Regression"", ""spec_name"": ""zeroinflated_poisson_regression"", ""rationale"": ""Used to model the count of red cards received, accounting for the excess zeros in the data due to the rarity of red card events"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.ZeroInflatedPoisson(df['redCards'], sm.add_constant(df[['skinTone', 'weight', 'position', 'games']])).fit()"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 weight""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 games_c""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
e4edbd42b2f442df8a8f0846ca0f6aae,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Multilevel Binomial Logistic Regression"", ""spec_name"": ""multilevel_binomial_logistic_regression"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['totalCards'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum']]).fit()\n"", ""associated_columns_derived_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""b08ce3bdd47b4118917c901505ac6207"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 min_skin_tone"", ""\ud83d\udfe9 red_yellow_cumsum""], ""associated_columns_leaf_spec_ids"": [""88a0383223d948338bda9cba4b51aaeb"", ""b08ce3bdd47b4118917c901505ac6207""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
f35fb09b6b38478e983b16561be9b804,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Multilevel Binomial Logistic Regression"", ""spec_name"": ""multilevel_binomial_logistic_regression"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['totalCards'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum']]).fit()\n"", ""associated_columns_derived_spec_ids"": [""b08ce3bdd47b4118917c901505ac6207"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""495b7db3b6274b81bda8277e0a69a11e""], ""associated_columns_orig"": [""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 red_yellow_cumsum"", ""\ud83d\udfe9 skin_tone_category""], ""associated_columns_leaf_spec_ids"": [""b08ce3bdd47b4118917c901505ac6207"", ""495b7db3b6274b81bda8277e0a69a11e""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
44e96be2d4964b4b85ba01c983bbf3ad,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Generalized Linear Mixed Model with Binomial Error"", ""spec_name"": ""generalized_linear_mixed_model_with_binomial_error"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum', 'skinTone']]).fit()"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""d5da7998b05f45dabf7705ea74361176"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean_rounded""], ""associated_columns_leaf_spec_ids"": [""d5da7998b05f45dabf7705ea74361176""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
59e65321f89846e1a293ba1d81af86b2,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Generalized Linear Mixed Model with Binomial Error"", ""spec_name"": ""generalized_linear_mixed_model_with_binomial_error"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum', 'skinTone']]).fit()"", ""associated_columns_derived_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""8f64dd94caed43f3a784c42cf90770ab"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean_rescaled""], ""associated_columns_leaf_spec_ids"": [""8f64dd94caed43f3a784c42cf90770ab""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
c592a68b95ee47bfbcf51583d4f668ae,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Generalized Linear Mixed Model with Binomial Error"", ""spec_name"": ""generalized_linear_mixed_model_with_binomial_error"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['redCard'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum', 'skinTone']]).fit()"", ""associated_columns_derived_spec_ids"": [""2b508b8bd61a4796882235cd6e7a92ac"", ""ROOT_SPEC_ID"", ""8f64dd94caed43f3a784c42cf90770ab"", ""82121faef295492ca0d32af6d21d9b89""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean_centered""], ""associated_columns_leaf_spec_ids"": [""8f64dd94caed43f3a784c42cf90770ab"", ""2b508b8bd61a4796882235cd6e7a92ac""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
552e735c7645434680270583845eded0,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Zero-Inflated Poisson Regression"", ""spec_name"": ""zeroinflated_poisson_regression"", ""rationale"": ""Used to model the count of red cards received, accounting for the excess zeros in the data due to the rarity of red card events"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.ZeroInflatedPoisson(df['redCards'], sm.add_constant(df[['skinTone', 'weight', 'position', 'games']])).fit()"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""6ddfa30e0de34a1caed8d1fc7de07295"", ""52cf40d969fb44c6910a2f0df44b47a6""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 weight""], ""associated_columns_derived"": [""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 dark_skin_tone_4""], ""associated_columns_leaf_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""d1110208133b4225a2ffa69f1f5f3418"", ""6ddfa30e0de34a1caed8d1fc7de07295""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
e046abde736f4b9fbdfed2b9e6b331ad,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Multilevel Binomial Logistic Regression"", ""spec_name"": ""multilevel_binomial_logistic_regression"", ""rationale"": ""Account for nesting/dependency within players, referees, referee countries, and etc."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.GLM(df['totalCards'], sm.add_constant(df[['skinTone']]), family=sm.families.Binomial(), groups=df[['playerShort', 'refNum']]).fit()\n"", ""associated_columns_derived_spec_ids"": [""b08ce3bdd47b4118917c901505ac6207"", ""6ddfa30e0de34a1caed8d1fc7de07295"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [""\ud83d\udfe8 playerShort"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 red_yellow_cumsum"", ""\ud83d\udfe9 dark_skin_tone_5""], ""associated_columns_leaf_spec_ids"": [""b08ce3bdd47b4118917c901505ac6207"", ""6ddfa30e0de34a1caed8d1fc7de07295""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
6b26a4545f8d4bb789919dc668736603,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""a584791866ee47acbd658e85ef88b402"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 redCards_yellowCards_total""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""a584791866ee47acbd658e85ef88b402""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
c67a792a732c45eb95287c5409aa6f99,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df['rateravg'])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""d6ea8dc6496443398a7fe03b45eb49c8"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club"", ""\ud83d\udfe8 redCards""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 yellowCards_per_game""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""d6ea8dc6496443398a7fe03b45eb49c8""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
4739acc8f57c4eef983eb3b2f52ddae3,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position', 'club', 'referee', 'yellow_cards']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club"", ""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 yellowCards""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
21db99f997b14bd5a18d7e5a928fe2d1,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Logistic Regression"", ""spec_name"": ""logistic_regression"", ""rationale"": ""Logistic regression is appropriate when the outcome variable is binary (i.e., red card or no red card). It estimates the log odds of the outcome occurring as a function of the predictor variables."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.Logit(df['redCardBinary'], sm.add_constant(df[['rateravg', 'height', 'weight', 'age']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""a3704d1d9dfe4a28843f8930d7ef45f1"", ""ROOT_SPEC_ID"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""fe93c2f7b9224c51805c01a816c8aa8e"", ""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 redCards_binary_1"", ""\ud83d\udfe9 height_c"", ""\ud83d\udfe9 weight_c"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 player_age_days""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""a3704d1d9dfe4a28843f8930d7ef45f1"", ""d1110208133b4225a2ffa69f1f5f3418"", ""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""fe93c2f7b9224c51805c01a816c8aa8e""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
de2411a15fcd4ff38f065e4dd017289b,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Weighted Least Squares Regression"", ""spec_name"": ""weighted_least_squares_regression"", ""rationale"": ""Predict total red and yellow-red cards per game from skin tone, weighting by games per dyad"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\nmodel = sm.WLS(df['redYellowRedPerGame'], sm.add_constant(df['skinTone']), weights=df['games']).fit()"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""a584791866ee47acbd658e85ef88b402""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 redCards_yellowCards_total""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""a584791866ee47acbd658e85ef88b402""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
d4eea5ea10ad4772a7d5f187d339d945,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Weighted Least Squares Regression"", ""spec_name"": ""weighted_least_squares_regression"", ""rationale"": ""Predict total red and yellow-red cards per game from skin tone, weighting by games per dyad"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\nmodel = sm.WLS(df['redYellowRedPerGame'], sm.add_constant(df['skinTone']), weights=df['games']).fit()"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""9b164686705048849bedde630fb475bd"", ""ROOT_SPEC_ID"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""a584791866ee47acbd658e85ef88b402""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 redCards_yellowCards_total_binary""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""9b164686705048849bedde630fb475bd""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
17fb1e1adf974e14a008e34236d02c3c,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Poisson Regression"", ""spec_name"": ""poisson_regression"", ""rationale"": ""Poisson regression is suitable for modeling count outcomes, such as the number of red cards a player receives. It assumes that the log of the expected count is a linear combination of the predictors."", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\nmodel = sm.GLM(df['redCards'], sm.add_constant(df[['skinTone', 'BMI', 'position', 'games', 'referee', 'player']]), family=sm.families.Poisson()).fit()"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5a98a0a59d0f4726b566b57b1ac1e951"", ""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 refNum"", ""\ud83d\udfe8 playerShort""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 bmi"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 games_c""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""5a98a0a59d0f4726b566b57b1ac1e951"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
a74216e5e8874183bc57807e61d812d5,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position', 'refCountry']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""d9bb30e3b3274e9f9c65d94882db824a"", ""82121faef295492ca0d32af6d21d9b89"", ""ea4945fa39fd4800ad2aaf19415cb342"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 refCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 skin_tone_binary"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 red_cards_per_game""], ""associated_columns_leaf_spec_ids"": [""ea4945fa39fd4800ad2aaf19415cb342"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""d9bb30e3b3274e9f9c65d94882db824a""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
253c9b28b703464cab04825c5e19c666,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['rateravg', 'height', 'height2', 'weight', 'weight2', 'age', 'age2', 'leagueCountry', 'position', 'club', 'referee']])).fit()\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""42b44f1271bb424c8ea4e6fb95c35538"", ""3efb9481beac461693817c01a9cf2abd"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""28283f23f2f548488e2b13a9b72f3c0d"", ""5e616bd092f9477bb93555a685fcd522""], ""associated_columns_orig"": [""\ud83d\udfe8 height"", ""\ud83d\udfe8 weight"", ""\ud83d\udfe8 leagueCountry"", ""\ud83d\udfe8 club"", ""\ud83d\udfe8 refNum""], ""associated_columns_derived"": [""\ud83d\udfe9 redCards_binary_2"", ""\ud83d\udfe9 height_squared"", ""\ud83d\udfe9 weight_squared"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 age_squared"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 rater_mean_collapsed""], ""associated_columns_leaf_spec_ids"": [""28283f23f2f548488e2b13a9b72f3c0d"", ""5e616bd092f9477bb93555a685fcd522"", ""5e616bd092f9477bb93555a685fcd522"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""5e616bd092f9477bb93555a685fcd522"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""3efb9481beac461693817c01a9cf2abd""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
ff5530db3e474497b0208abf5b45b064,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['totalRedCards'], sm.add_constant(df[['skinTone', 'inverseGoals', 'totalGames', 'age', 'position', 'country']])).fit()"", ""associated_columns_derived_spec_ids"": [""ad706d71becb490094de1cb61bb8144f"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""3bd5c9374aae4c1bbf6cb63250b6983d"", ""82121faef295492ca0d32af6d21d9b89"", ""406fce3c69714585a879749a9a436109"", ""d1110208133b4225a2ffa69f1f5f3418""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 leagueCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 inverse_goals"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 position_recoded_1""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""3bd5c9374aae4c1bbf6cb63250b6983d"", ""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""b0412a0acb1a4dadb224cc479bf9ba07""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
cc55354723944e3383a4384914be4167,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Ordinary Least Squares (OLS) Regression"", ""spec_name"": ""ordinary_least_squares_ols_regression"", ""rationale"": ""OLS regression was used to estimate the linear relationship between red cards and player skin tone, controlling for variables"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\n\nmodel = sm.OLS(df['redCards'], sm.add_constant(df[['clubSkinTone', 'clubGoals', 'games', 'position', 'skinTone']])).fit()"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""ROOT_SPEC_ID"", ""a578e53007ea44b6bc3fc5d368dce254"", ""bca7328d9ecf41f390d735cb331d4a6d"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6""], ""associated_columns_orig"": [""\ud83d\udfe8 redCards"", ""\ud83d\udfe8 leagueCountry""], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 position_recoded_1"", ""\ud83d\udfe9 club_mean_skin_tone"", ""\ud83d\udfe9 club_goals_per_game""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""b0412a0acb1a4dadb224cc479bf9ba07"", ""a578e53007ea44b6bc3fc5d368dce254"", ""a578e53007ea44b6bc3fc5d368dce254""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
25b12c96f4c14ad5b4673444173194da,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Weighted Least Squares Regression"", ""spec_name"": ""weighted_least_squares_regression"", ""rationale"": ""Predict total red and yellow-red cards per game from skin tone, weighting by games per dyad"", ""dependencies"": [], ""code"": ""import statsmodels.api as sm\nmodel = sm.WLS(df['redYellowRedPerGame'], sm.add_constant(df['skinTone']), weights=df['games']).fit()"", ""associated_columns_derived_spec_ids"": [""d1110208133b4225a2ffa69f1f5f3418"", ""ROOT_SPEC_ID"", ""7b8c82026519441f8043b19997cbba82"", ""82121faef295492ca0d32af6d21d9b89"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""a584791866ee47acbd658e85ef88b402""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 redCards_yellowCards_per_game""], ""associated_columns_leaf_spec_ids"": [""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""7b8c82026519441f8043b19997cbba82""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,
6c36cd281fc64b119422eaece9c6696e,,,"{""time_stamp"": ""06-11-2024 at 07:10:32 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""indicates whether the player has ever received a red (or yellow-red) card throughout the games represented in the dataset."", ""spec_name"": ""received_red_cards_dichotomized"", ""trans_verb"": [""derive""], ""code"": ""df['received_red_cards_dichotomized'] = (df['redCards_dischotomized'] | df['yellowReds_dischotomized']).astype(int)\n"", ""rationale"": """", ""conditions"": """", ""input_cols_to_output_col_mapping"": [[[""redCards_dischotomized"", ""yellowReds_dischotomized""], ""received_red_cards_dichotomized""]], ""branches"": [{""dependencies"": [""ad706d71becb490094de1cb61bb8144f""], ""condition"": """"}], ""annotator"": null}",,,,
fd92763db8e44d3b80d84759df9af7be,,,,"{""time_stamp"": ""06-13-2024 at 09:36:20 PM"", ""tags"": [], ""read_only_tags"": [], ""is_negative"": false, ""specification"": ""Hierarchical logistic regression"", ""spec_name"": ""hierarchical_logistic_regression"", ""rationale"": ""The outcome variable (red card data) was dichotomized, making it suitable for logistic regression. The hierarchical nature of the model allowed the researcher to control for potential confounding variables"", ""dependencies"": [], ""code"": ""import statsmodels.formula.api as smf\n\nmodel = smf.logit(\""Red_Card ~ Skin_Tone + games + age + inv_goals + Skin_Tone:leagueCountry_dummy1 + Skin_Tone:leagueCountry_dummy2 + Skin_Tone:leagueCountry_dummy3 + Skin_Tone:leagueCountry_dummy4\"", data=df).fit()\n\nprint(model.summary())"", ""associated_columns_derived_spec_ids"": [""6c36cd281fc64b119422eaece9c6696e"", ""406fce3c69714585a879749a9a436109"", ""3bd5c9374aae4c1bbf6cb63250b6983d"", ""edccb89484aa4bc2a17639c1c7402628"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""57f409ce4b094b578d85a4b9b0fe8493"", ""ad706d71becb490094de1cb61bb8144f"", ""ROOT_SPEC_ID""], ""associated_columns_orig"": [], ""associated_columns_derived"": [""\ud83d\udfe9 received_red_cards_dichotomized"", ""\ud83d\udfe9 rater_mean"", ""\ud83d\udfe9 games_c"", ""\ud83d\udfe9 age"", ""\ud83d\udfe9 inverse_goals"", ""\ud83d\udfe9 leagueCountry_Spain"", ""\ud83d\udfe9 leagueCountry_France"", ""\ud83d\udfe9 leagueCountry_Germany"", ""\ud83d\udfe9 leagueCountry_England""], ""associated_columns_leaf_spec_ids"": [""6c36cd281fc64b119422eaece9c6696e"", ""82121faef295492ca0d32af6d21d9b89"", ""d1110208133b4225a2ffa69f1f5f3418"", ""52cf40d969fb44c6910a2f0df44b47a6"", ""3bd5c9374aae4c1bbf6cb63250b6983d"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628"", ""edccb89484aa4bc2a17639c1c7402628""], ""associated_specified_spec_ids"": [], ""annotator"": null}",,,