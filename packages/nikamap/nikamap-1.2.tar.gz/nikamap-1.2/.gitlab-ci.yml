# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest
#image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate


test:
  script:
    - pip install ruff tox  # you can also use tox
    - pip install --editable ".[test]"
    - tox run-parallel

run:
  script:
    - pip install --editable .
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    # - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl


pypi:
  stage: deploy
  before_script:
    - python3 -m pip install --upgrade twine
    - python3 -m pip install --upgrade build    
    - rm -rf dist
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - python3 -m build
    - python3 -m twine check dist/*
    - python3 -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*    
  only:
    - tags

ruff:
  stage: test
  before_script:
    - "pip install ruff"
  script:
    - "ruff check . || true"
    - "ruff check . --output-format=gitlab > gl-code-quality-report.json"
  variables:
    PYTHON_VERSION: '3.10'
  artifacts:
    reports:
      codequality: "gl-code-quality-report.json"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - ".cache/pip"
      - ".ruff_cache"

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
