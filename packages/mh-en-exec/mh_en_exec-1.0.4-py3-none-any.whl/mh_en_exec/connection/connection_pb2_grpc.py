# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import connection_pb2 as connection__pb2


class ConnectionGrpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNodeStructures = channel.unary_unary(
                '/connection.ConnectionGrpc/GetNodeStructures',
                request_serializer=connection__pb2.Empty.SerializeToString,
                response_deserializer=connection__pb2.GetNodeStructuresResponse.FromString,
                )
        self.GetCurrentExistingNodes = channel.unary_unary(
                '/connection.ConnectionGrpc/GetCurrentExistingNodes',
                request_serializer=connection__pb2.Empty.SerializeToString,
                response_deserializer=connection__pb2.GetCurrentExistingNodesResponse.FromString,
                )
        self.CreateNodeInstance = channel.unary_unary(
                '/connection.ConnectionGrpc/CreateNodeInstance',
                request_serializer=connection__pb2.CreateNodeInstanceRequest.SerializeToString,
                response_deserializer=connection__pb2.CreateNodeInstanceResponse.FromString,
                )
        self.UpdatePortValues = channel.unary_unary(
                '/connection.ConnectionGrpc/UpdatePortValues',
                request_serializer=connection__pb2.UpdatePortValuesRequest.SerializeToString,
                response_deserializer=connection__pb2.UpdatePortValuesResponse.FromString,
                )
        self.ExecuteNode = channel.unary_unary(
                '/connection.ConnectionGrpc/ExecuteNode',
                request_serializer=connection__pb2.ExecuteNodeRequest.SerializeToString,
                response_deserializer=connection__pb2.ExecuteNodeResponse.FromString,
                )
        self.RemoveNode = channel.unary_unary(
                '/connection.ConnectionGrpc/RemoveNode',
                request_serializer=connection__pb2.RemoveNodeRequest.SerializeToString,
                response_deserializer=connection__pb2.RemoveNodeResponse.FromString,
                )
        self.SendResource = channel.unary_unary(
                '/connection.ConnectionGrpc/SendResource',
                request_serializer=connection__pb2.SendResourceRequest.SerializeToString,
                response_deserializer=connection__pb2.SendResourceResponse.FromString,
                )
        self.GetResource = channel.unary_unary(
                '/connection.ConnectionGrpc/GetResource',
                request_serializer=connection__pb2.GetResourceRequest.SerializeToString,
                response_deserializer=connection__pb2.GetResourceResponse.FromString,
                )
        self.ReleaseResource = channel.unary_unary(
                '/connection.ConnectionGrpc/ReleaseResource',
                request_serializer=connection__pb2.ReleaseResourceRequest.SerializeToString,
                response_deserializer=connection__pb2.ReleaseResourceResponse.FromString,
                )


class ConnectionGrpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNodeStructures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentExistingNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNodeInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePortValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectionGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNodeStructures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeStructures,
                    request_deserializer=connection__pb2.Empty.FromString,
                    response_serializer=connection__pb2.GetNodeStructuresResponse.SerializeToString,
            ),
            'GetCurrentExistingNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentExistingNodes,
                    request_deserializer=connection__pb2.Empty.FromString,
                    response_serializer=connection__pb2.GetCurrentExistingNodesResponse.SerializeToString,
            ),
            'CreateNodeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNodeInstance,
                    request_deserializer=connection__pb2.CreateNodeInstanceRequest.FromString,
                    response_serializer=connection__pb2.CreateNodeInstanceResponse.SerializeToString,
            ),
            'UpdatePortValues': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePortValues,
                    request_deserializer=connection__pb2.UpdatePortValuesRequest.FromString,
                    response_serializer=connection__pb2.UpdatePortValuesResponse.SerializeToString,
            ),
            'ExecuteNode': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteNode,
                    request_deserializer=connection__pb2.ExecuteNodeRequest.FromString,
                    response_serializer=connection__pb2.ExecuteNodeResponse.SerializeToString,
            ),
            'RemoveNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveNode,
                    request_deserializer=connection__pb2.RemoveNodeRequest.FromString,
                    response_serializer=connection__pb2.RemoveNodeResponse.SerializeToString,
            ),
            'SendResource': grpc.unary_unary_rpc_method_handler(
                    servicer.SendResource,
                    request_deserializer=connection__pb2.SendResourceRequest.FromString,
                    response_serializer=connection__pb2.SendResourceResponse.SerializeToString,
            ),
            'GetResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResource,
                    request_deserializer=connection__pb2.GetResourceRequest.FromString,
                    response_serializer=connection__pb2.GetResourceResponse.SerializeToString,
            ),
            'ReleaseResource': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseResource,
                    request_deserializer=connection__pb2.ReleaseResourceRequest.FromString,
                    response_serializer=connection__pb2.ReleaseResourceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'connection.ConnectionGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConnectionGrpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNodeStructures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/GetNodeStructures',
            connection__pb2.Empty.SerializeToString,
            connection__pb2.GetNodeStructuresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentExistingNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/GetCurrentExistingNodes',
            connection__pb2.Empty.SerializeToString,
            connection__pb2.GetCurrentExistingNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNodeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/CreateNodeInstance',
            connection__pb2.CreateNodeInstanceRequest.SerializeToString,
            connection__pb2.CreateNodeInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePortValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/UpdatePortValues',
            connection__pb2.UpdatePortValuesRequest.SerializeToString,
            connection__pb2.UpdatePortValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/ExecuteNode',
            connection__pb2.ExecuteNodeRequest.SerializeToString,
            connection__pb2.ExecuteNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/RemoveNode',
            connection__pb2.RemoveNodeRequest.SerializeToString,
            connection__pb2.RemoveNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/SendResource',
            connection__pb2.SendResourceRequest.SerializeToString,
            connection__pb2.SendResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/GetResource',
            connection__pb2.GetResourceRequest.SerializeToString,
            connection__pb2.GetResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionGrpc/ReleaseResource',
            connection__pb2.ReleaseResourceRequest.SerializeToString,
            connection__pb2.ReleaseResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
