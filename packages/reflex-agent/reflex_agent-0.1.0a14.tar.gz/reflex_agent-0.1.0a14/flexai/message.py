"""Message types for agent-LLM communication in the FlexAI framework."""

from __future__ import annotations
from dataclasses import dataclass
from typing import Any
import json


@dataclass(frozen=True, kw_only=True)
class Message:
    """Base class for all message types in the conversation flow."""

    # The role of the message (user, system, AI, tool).
    role: str

    # The content of the message.
    content: Any


@dataclass(frozen=True, kw_only=True)
class SystemMessage(Message):
    """A system message."""

    role: str = "system"


@dataclass(frozen=True, kw_only=True)
class UserMessage(Message):
    """A message sent by a user."""

    role: str = "user"


@dataclass(frozen=True, kw_only=True)
class AIMessage(Message):
    """A message generated by the AI."""

    role: str = "assistant"

    # Token usage for the input that generated this output
    input_tokens: int = 0

    # Token usage to generate this output
    output_tokens: int = 0

