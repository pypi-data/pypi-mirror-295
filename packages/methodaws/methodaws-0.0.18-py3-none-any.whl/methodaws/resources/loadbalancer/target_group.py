# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .target_group_ip_address_type import TargetGroupIpAddressType
from ...core.serialization import FieldMetadata
import typing
from .protocol import Protocol
from .target import Target
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TargetGroup(UniversalBaseModel):
    arn: str
    name: str
    ip_address_type: typing_extensions.Annotated[TargetGroupIpAddressType, FieldMetadata(alias="ipAddressType")]
    load_balancer_arn: typing_extensions.Annotated[str, FieldMetadata(alias="loadBalancerArn")]
    port: int
    protocol: typing.Optional[Protocol] = None
    vpc_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="vpcId")] = None
    targets: typing.Optional[typing.List[Target]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
