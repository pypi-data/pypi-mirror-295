# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import datetime as dt
from ...core.serialization import FieldMetadata
import typing
from .target import Target
from .listener import Listener
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LoadBalancerV1(UniversalBaseModel):
    name: str
    region: str
    created_time: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdTime")]
    dns_name: typing_extensions.Annotated[str, FieldMetadata(alias="dnsName")]
    security_group_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="securityGroupIds")
    ] = None
    vpc_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="vpcId")] = None
    subnet_ids: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="subnetIds")] = None
    hosted_zone_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="hostedZoneId")] = None
    targets: typing.Optional[typing.List[Target]] = None
    listeners: typing.Optional[typing.List[Listener]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
