# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .s_3_object_details import S3ObjectDetails
from ...core.serialization import FieldMetadata
from .s_3_bucket_acl import S3BucketAcl
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ExternalBucket(UniversalBaseModel):
    name: str
    url: str
    region: str
    directory_contents: typing_extensions.Annotated[
        typing.Optional[typing.List[S3ObjectDetails]], FieldMetadata(alias="directoryContents")
    ] = None
    allow_directory_listing: typing_extensions.Annotated[bool, FieldMetadata(alias="allowDirectoryListing")]
    allow_anonymous_read: typing_extensions.Annotated[bool, FieldMetadata(alias="allowAnonymousRead")]
    policy: typing.Optional[str] = None
    acls: typing.Optional[typing.List[S3BucketAcl]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
