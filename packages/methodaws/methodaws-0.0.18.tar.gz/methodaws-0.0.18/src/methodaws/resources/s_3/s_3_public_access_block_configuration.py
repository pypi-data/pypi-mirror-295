# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class S3PublicAccessBlockConfiguration(UniversalBaseModel):
    block_public_acls: typing_extensions.Annotated[bool, FieldMetadata(alias="blockPublicAcls")]
    ignore_public_acls: typing_extensions.Annotated[bool, FieldMetadata(alias="ignorePublicAcls")]
    block_public_policy: typing_extensions.Annotated[bool, FieldMetadata(alias="blockPublicPolicy")]
    restrict_public_buckets: typing_extensions.Annotated[bool, FieldMetadata(alias="restrictPublicBuckets")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
