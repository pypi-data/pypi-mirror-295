# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import datetime as dt
from ...core.serialization import FieldMetadata
from .ip_address_type import IpAddressType
import typing
from .load_balancer_state import LoadBalancerState
from .listener import Listener
from .target_group import TargetGroup
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LoadBalancerV2(UniversalBaseModel):
    """
    LoadBalancer represents a load balancer that distributes incoming network traffic across multiple servers.
    As defined by the AWS Go SDK (https://pkg.go.dev/github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2@v1.33.1/types#LoadBalancer)
    """

    arn: str
    name: str
    region: str
    created_time: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdTime")]
    dns_name: typing_extensions.Annotated[str, FieldMetadata(alias="dnsName")]
    ip_address_type: typing_extensions.Annotated[IpAddressType, FieldMetadata(alias="ipAddressType")]
    security_group_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="securityGroupIds")
    ] = None
    state: typing.Optional[LoadBalancerState] = None
    vpc_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="vpcId")] = None
    listeners: typing.Optional[typing.List[Listener]] = None
    subnet_ids: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="subnetIds")] = None
    hosted_zone_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="hostedZoneId")] = None
    target_groups: typing_extensions.Annotated[
        typing.Optional[typing.List[TargetGroup]], FieldMetadata(alias="targetGroups")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
