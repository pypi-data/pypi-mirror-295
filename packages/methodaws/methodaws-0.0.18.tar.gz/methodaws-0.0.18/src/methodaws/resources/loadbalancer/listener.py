# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .protocol import Protocol
from .certificate import Certificate
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Listener(UniversalBaseModel):
    arn: typing.Optional[str] = None
    protocol: typing.Optional[Protocol] = None
    port: int
    certificates: typing.Optional[typing.List[Certificate]] = None
    load_balancer_arn: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="loadBalancerArn")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
