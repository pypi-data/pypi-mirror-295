# coding: utf-8

"""
    PDS Registry Search API

    Registry API enabling advanced search on PDS data and metadata. The API provides end-points to search for bundles, collections and any PDS products with advanced search queries. It also enables to browse the archive hierarchically downward (e.g. collection/s products) or upward (e.g. bundles containing a product). 

    The version of the OpenAPI document: 1.5.0
    Contact: pds-operator@jpl.nasa.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pds.api_client.models.wyriwyg_products import WyriwygProducts

class TestWyriwygProducts(unittest.TestCase):
    """WyriwygProducts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WyriwygProducts:
        """Test WyriwygProducts
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WyriwygProducts`
        """
        model = WyriwygProducts()
        if include_optional:
            return WyriwygProducts(
                data = [
                    pds.api_client.models.wyriwyg_product.wyriwygProduct(
                        key_value_pairs = [
                            pds.api_client.models.wyriwyg_product_key_value_pair.wyriwyg_product_key_value_pair(
                                key = '', 
                                value = '', )
                            ], )
                    ],
                summary = pds.api_client.models.summary.summary(
                    hits = 56, 
                    limit = 56, 
                    properties = [
                        ''
                        ], 
                    q = '', 
                    search_after = [
                        ''
                        ], 
                    sort = [
                        ''
                        ], 
                    took = 56, )
            )
        else:
            return WyriwygProducts(
                data = [
                    pds.api_client.models.wyriwyg_product.wyriwygProduct(
                        key_value_pairs = [
                            pds.api_client.models.wyriwyg_product_key_value_pair.wyriwyg_product_key_value_pair(
                                key = '', 
                                value = '', )
                            ], )
                    ],
                summary = pds.api_client.models.summary.summary(
                    hits = 56, 
                    limit = 56, 
                    properties = [
                        ''
                        ], 
                    q = '', 
                    search_after = [
                        ''
                        ], 
                    sort = [
                        ''
                        ], 
                    took = 56, ),
        )
        """

    def testWyriwygProducts(self):
        """Test WyriwygProducts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
