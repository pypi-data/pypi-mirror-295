import enum
from typing import overload

import llvmpym_ext


class ByteOrdering(enum.Enum):
    """ByteOrdering"""

    BigEndian = 0

    LittleEndian = 1

class TargetData(llvmpym_ext.PymTargetLibraryInfoObject):
    """TargetData"""

def init_aarch64_asm_parser() -> None: ...

def init_aarch64_asm_printer() -> None: ...

def init_aarch64_disassembler() -> None: ...

def init_aarch64_mc() -> None: ...

@overload
def init_aarch64_target_info() -> None: ...

@overload
def init_aarch64_target_info() -> None: ...

def init_all_asm_parsers() -> None: ...

def init_all_asm_printers() -> None: ...

def init_all_disassemblers() -> None: ...

def init_all_target_infos() -> None: ...

def init_all_target_m_cs() -> None: ...

def init_all_targets() -> None: ...

def init_amdgpu_asm_parser() -> None: ...

def init_amdgpu_asm_printer() -> None: ...

def init_amdgpu_disassembler() -> None: ...

def init_amdgpu_mc() -> None: ...

@overload
def init_amdgpu_target_info() -> None: ...

@overload
def init_amdgpu_target_info() -> None: ...

def init_arm_asm_parser() -> None: ...

def init_arm_asm_printer() -> None: ...

def init_arm_disassembler() -> None: ...

def init_arm_mc() -> None: ...

@overload
def init_arm_target_info() -> None: ...

@overload
def init_arm_target_info() -> None: ...

def init_avr_asm_parser() -> None: ...

def init_avr_asm_printer() -> None: ...

def init_avr_disassembler() -> None: ...

def init_avr_mc() -> None: ...

@overload
def init_avr_target_info() -> None: ...

@overload
def init_avr_target_info() -> None: ...

def init_bpf_asm_parser() -> None: ...

def init_bpf_asm_printer() -> None: ...

def init_bpf_disassembler() -> None: ...

def init_bpf_mc() -> None: ...

@overload
def init_bpf_target_info() -> None: ...

@overload
def init_bpf_target_info() -> None: ...

def init_hexagon_asm_parser() -> None: ...

def init_hexagon_asm_printer() -> None: ...

def init_hexagon_disassembler() -> None: ...

def init_hexagon_mc() -> None: ...

@overload
def init_hexagon_target_info() -> None: ...

@overload
def init_hexagon_target_info() -> None: ...

def init_lanai_asm_parser() -> None: ...

def init_lanai_asm_printer() -> None: ...

def init_lanai_disassembler() -> None: ...

def init_lanai_mc() -> None: ...

@overload
def init_lanai_target_info() -> None: ...

@overload
def init_lanai_target_info() -> None: ...

def init_loongarch_asm_parser() -> None: ...

def init_loongarch_asm_printer() -> None: ...

def init_loongarch_disassembler() -> None: ...

def init_loongarch_mc() -> None: ...

@overload
def init_loongarch_target_info() -> None: ...

@overload
def init_loongarch_target_info() -> None: ...

def init_mips_asm_parser() -> None: ...

def init_mips_asm_printer() -> None: ...

def init_mips_disassembler() -> None: ...

def init_mips_mc() -> None: ...

@overload
def init_mips_target_info() -> None: ...

@overload
def init_mips_target_info() -> None: ...

def init_msp430_asm_parser() -> None: ...

def init_msp430_asm_printer() -> None: ...

def init_msp430_disassembler() -> None: ...

def init_msp430_mc() -> None: ...

@overload
def init_msp430_target_info() -> None: ...

@overload
def init_msp430_target_info() -> None: ...

def init_native_asm_parser() -> bool: ...

def init_native_asm_printer() -> bool: ...

def init_native_disassembler() -> bool: ...

def init_native_target() -> bool:
    """
    The main program should call this function toinitialize the native target corresponding to the host.  This is usefulfor JIT applications to ensure that the target gets linked in correctly.
    """

def init_nvptx_asm_printer() -> None: ...

def init_nvptx_mc() -> None: ...

@overload
def init_nvptx_target_info() -> None: ...

@overload
def init_nvptx_target_info() -> None: ...

def init_powerpc_asm_parser() -> None: ...

def init_powerpc_asm_printer() -> None: ...

def init_powerpc_disassembler() -> None: ...

def init_powerpc_mc() -> None: ...

@overload
def init_powerpc_target_info() -> None: ...

@overload
def init_powerpc_target_info() -> None: ...

def init_riscv_asm_parser() -> None: ...

def init_riscv_asm_printer() -> None: ...

def init_riscv_disassembler() -> None: ...

def init_riscv_mc() -> None: ...

@overload
def init_riscv_target_info() -> None: ...

@overload
def init_riscv_target_info() -> None: ...

def init_sparc_asm_parser() -> None: ...

def init_sparc_asm_printer() -> None: ...

def init_sparc_disassembler() -> None: ...

def init_sparc_mc() -> None: ...

@overload
def init_sparc_target_info() -> None: ...

@overload
def init_sparc_target_info() -> None: ...

def init_systemz_asm_parser() -> None: ...

def init_systemz_asm_printer() -> None: ...

def init_systemz_disassembler() -> None: ...

def init_systemz_mc() -> None: ...

@overload
def init_systemz_target_info() -> None: ...

@overload
def init_systemz_target_info() -> None: ...

def init_ve_asm_parser() -> None: ...

def init_ve_asm_printer() -> None: ...

def init_ve_disassembler() -> None: ...

def init_ve_mc() -> None: ...

@overload
def init_ve_target_info() -> None: ...

@overload
def init_ve_target_info() -> None: ...

def init_webassembly_asm_parser() -> None: ...

def init_webassembly_asm_printer() -> None: ...

def init_webassembly_disassembler() -> None: ...

def init_webassembly_mc() -> None: ...

@overload
def init_webassembly_target_info() -> None: ...

@overload
def init_webassembly_target_info() -> None: ...

def init_x86_asm_parser() -> None: ...

def init_x86_asm_printer() -> None: ...

def init_x86_disassembler() -> None: ...

def init_x86_mc() -> None: ...

@overload
def init_x86_target_info() -> None: ...

@overload
def init_x86_target_info() -> None: ...

def init_xcore_asm_printer() -> None: ...

def init_xcore_mc() -> None: ...

@overload
def init_xcore_target_info() -> None: ...

@overload
def init_xcore_target_info() -> None: ...
