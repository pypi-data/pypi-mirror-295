[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "xarray-ome-ngff"
dynamic = ["version"]
description = 'Xarray and OME-NGFF'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["ngff", "xarray"]
authors = [
  { name = "Davis Vann Bennett", email = "davis.v.bennett@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "zarr<3.0.0",
  "xarray >= 2023.2.0",
  "pydantic-ome-ngff == 0.6.0",
  "pint >= 0.24",
  "pydantic >= 2.0.0, <3",
  "dask >= 2022.3.0"
]

[project.urls]
Documentation = "https://janeliascicomp.github.io/xarray-ome-ngff"
Issues = "https://github.com/janeliascicomp/xarray-ome-ngff/issues"
Source = "https://github.com/janeliascicomp/xarray-ome-ngff"

[tool.hatch.version]
path = "src/xarray_ome_ngff/__about__.py"

[tool.hatch.envs.test]
dependencies = [
  "pytest == 7.2.1",
  "pytest-cov",
  "pytest-examples >= 0.0.9",
  "requests",
  "aiohttp",
  "dask"
  ]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/xarray_ome_ngff tests}"

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs-material==9.5.33",
  "mkdocstrings[python]==0.25.2"
  ]

[tool.hatch.envs.docs.scripts]
serve = "mkdocs serve --watch=src"

[tool.coverage.run]
source_pkgs = ["xarray_ome_ngff", "tests"]
branch = true
parallel = true
omit = [
  "src/xarray_ome_ngff/__about__.py",
]

[tool.coverage.paths]
xarray_ome_ngff = ["src/xarray_ome_ngff", "*/xarray-ome-ngff/src/xarray_ome_ngff"]
tests = ["tests", "*/xarray-ome-ngff/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
