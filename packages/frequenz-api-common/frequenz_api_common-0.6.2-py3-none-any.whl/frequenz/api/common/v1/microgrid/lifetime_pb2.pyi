"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz definition of entity lifetimes, based upon start and end timestamps.

Copyright 2023 Frequenz Energy-as-a-Service GmbH

Licensed under the MIT License (the "License");
you may not use this file except in compliance with the License.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Lifetime(google.protobuf.message.Message):
    """Lifetime captures the timestamps indicating the active operational period of
    a microgrid asset, such as a component, connection, sensor, or any other
    entity with a limited operational lifetime.

    !!! warning "Permanent Deletion"
        The `end_timestamp` indicates that the asset has been permanently removed
        from the system.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the asset became operationally active."""

    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional timestamp when the asset's operational activity ceased."""

    def __init__(
        self,
        *,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["end_timestamp", b"end_timestamp", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["end_timestamp", b"end_timestamp", "start_timestamp", b"start_timestamp"]) -> None: ...

global___Lifetime = Lifetime
