"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz definitions of energy for electricity trading.

Copyright 2023 Frequenz Energy-as-a-Service GmbH

Licensed under the MIT License (the "License");
you may not use this file except in compliance with the License.
"""

import builtins
import frequenz.api.common.v1.types.decimal_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Energy(google.protobuf.message.Message):
    """Represents a single unit of electricity.

    !!! note
        In these trading orders, the unit of energy is denominated in MWh
        (Megawatt-hours) as opposed to MW (Megawatts).  MWh is a unit of energy
        representing total output over a period, while MW is a unit of power that
        represents the rate of energy production or consumption.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MWH_FIELD_NUMBER: builtins.int
    @property
    def mwh(self) -> frequenz.api.common.v1.types.decimal_pb2.Decimal:
        """Represents energy unit in Megawatthours (MWh)."""

    def __init__(
        self,
        *,
        mwh: frequenz.api.common.v1.types.decimal_pb2.Decimal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["mwh", b"mwh"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["mwh", b"mwh"]) -> None: ...

global___Energy = Energy
