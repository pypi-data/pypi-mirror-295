Metadata-Version: 2.1
Name: pheno-utils
Version: 0.4.0
Summary: Pheno data utils - viz, loaders, mergers
Home-page: https://github.com/pheno-ai/pheno-utils
Author: pheno.ai
Author-email: hagai@pheno.ai
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastcore
Requires-Dist: pandas ==2.1.0
Requires-Dist: pyarrow
Requires-Dist: scipy
Requires-Dist: fastparquet
Requires-Dist: matplotlib
Requires-Dist: seaborn
Requires-Dist: scikit-learn
Requires-Dist: pyCompare
Requires-Dist: pygam
Requires-Dist: smart-open
Requires-Dist: dask[dataframe]
Requires-Dist: requests
Requires-Dist: urllib3
Provides-Extra: dev

# pheno-utils

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

pheno-utils is a dynamic Python package developed by Pheno.AI, for
handling our medical datasets. It simplifies data loading, enables
effective merging, and offers intuitive visualization tools.

## Install

``` sh
pip install pheno_utils
```

## How to use

Examples:

``` python
data = generate_synthetic_data(n=1000)
hist_ecdf_plots(data=data, col="val1")
```

![](index_files/figure-commonmark/cell-2-output-1.png)

``` python
age_refplots = GenderAgeRefPlot(data, "val1")
age_refplots.plot()
```

![](index_files/figure-commonmark/cell-3-output-1.png)

## Setting Up pheno-utils

To use `pheno-utils`, you must have a `config.json` file. This file
should be set up according to your filesystem and placed in the
`~/.pheno/` directory.

### If You’re Working on TRE

For those working in the Trusted Research Environment (TRE), you don’t
need to worry about the `config.json` file. It will be automatically
generated for you!

### If You’re Working with Phenos’ S3 Bucket

If you’re working with Phenos’ S3 bucket, you’ll need to manually create
the `config.json` file. You can do this by running the following Python
script:

``` sh
python config_setup/create_default_config.py -d s3://datasets_bucket_name
```

### If you are working on local file system

If you are working on local file system, you’ll need to manually create
the `config.json` file and locating it under `~/.pheno/` directory.
Please use the config_setup/example_config.json as a template for your
config.json file.
