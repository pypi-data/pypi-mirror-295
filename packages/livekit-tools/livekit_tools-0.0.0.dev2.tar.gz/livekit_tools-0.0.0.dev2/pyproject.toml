# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "livekit_tools"
version = "0.0.0.dev2"
authors = [{name = 'David Guerizec', email = "david@guerizec.net"}]
urls = {github = "https://github.com/dguerizec/livekit_tools"}
description = "livekit common utilities"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["livekit", "camera", "capture", "console", "token"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.10"
dependencies = [
    "PyJWT",
    "numpy",
    "livekit",
    "livekit-api",
    "pytimeparse2",
    "typer",
]

[project.scripts]
"livekit_token.py" = "livekit_tools.__main__:main_token"
"livekit_url.py" = "livekit_tools.__main__:main_url"
"livekit_peek.py" = "livekit_tools.__main__:main_peek"
"livekit_decode.py" = "livekit_tools.__main__:main_decode"
"livekit_verify.py" = "livekit_tools.__main__:main_verify"

[tool.setuptools]
zip-safe = true
platforms = ["Linux"]
include-package-data = true

[tool.setuptools.package-data]
"livekit_tools" = ["py.typed"]

[tool.setuptools.packages.find]
where = ["src"]
#include = ["proxy_manager"]
#exclude = [
#    "tests",
#    "*.tests",
#    "*.tests.*",
#]

[project.optional-dependencies]
dev = [
    'ipdb',
    'ipython<8.2.0',
    'mypy',
    'mypy-extensions',
    'typing_extensions',
    'types-setuptools',
]
lint = [
    'black',
    'isort',
    'ruff',
    'flake8',
    'flake8-bugbear',
    'flake8-comprehensions',
    'flake8-docstrings',
    'flake8-formatter-abspath',
    'pycodestyle',
    'pydocstyle',
    'pylint',
    'reformat-gherkin',
]
tests = [
    'mock',
    'pytest',
    'pytest-asyncio',
    'coverage-conditional-plugin',
    'pytest-bdd',
    'pytest-cov',
    'pytest-lazy-fixture',
    'pytest-sugar',
    'types-mock',
]

[tool.isort]
profile = "black"

[tool.black]
line-length = 118
target-version = ["py310"]

[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin",
]
python_version = "3.10"
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_return_any = true
warn_unreachable = true
local_partial_types = true
strict_equality = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
strict = true
implicit_reexport = true
disallow_subclassing_any = false

[[tool.mypy.overrides]]
module = [
    'tests.*',
]
#; strict = False  # doesn't work so we disallow all manually that are not set globally
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[tool.pytest.ini_options]
addopts = "--ignore setup.py --ignore docs --ignore ci --pyargs"
#log_cli = true
#log_cli_level = "DEBUG"


[tool.ruff]
lint.select = ["A", "B", "C", "E", "F"]
line-length = 120
lint.ignore = ["A001", "A002", "A003", "D203", "D213", "C901"]

[tool.ruff.lint.per-file-ignores]
"*/tests/**" = ["E501", "D"]
