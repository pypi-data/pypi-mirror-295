
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_flow_cytometer_signal.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_flow_cytometer_signal.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_flow_cytometer_signal.py:


Simulating Flow Cytometer Signals with Rayleigh Scattering
==========================================================

This example demonstrates how to simulate signals from a flow cytometer using
the `FlowCytometer` class in combination with two detectors: Forward Scatter (FSC) and Side Scatter (SSC).

Flow cytometers generate signals (e.g., forward scatter and side scatter) when
particles pass through a laser beam. These signals provide valuable information about
the size, complexity, and other properties of the particles passing through the flow.

In this simulation, we use Rayleigh scattering to model how particles interact with
the laser beam. We simulate particles with a uniform size distribution and analyze
their scattering properties.

.. GENERATED FROM PYTHON SOURCE LINES 16-38

.. code-block:: python3


    # Step 1: Import the necessary libraries
    # --------------------------------------
    from FlowCyPy import FlowCytometer, ScattererDistribution, Detector, Source, Flow
    from FlowCyPy.distribution import NormalDistribution


    # Example usage of the Flow class
    flow = Flow(
        flow_speed=80e-6,  # 80 micrometers per second
        flow_area=1e-6,  # 1 square micrometer
        total_time=1.0,  # 1 second of flow
        scatterer_density=1e11  # 1e12 particles per cubic meter
    )

    flow.print_properties()

    # Step 2: Define the particle size distribution
    # ---------------------------------------------
    # In this case, we're using a uniform particle size distribution. Particles are modeled
    # with a refractive index of 1.5, a mean size of 1 µm, and a standard deviation of 0.1 µm.
    # The total particle density is 4 x 10^10 particles per cubic meter.




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Flow Properties
    +-----------------------+-----------------------+
    | Property              | Value                 |
    +=======================+=======================+
    | Flow Speed            | 80.00 µm/s            |
    +-----------------------+-----------------------+
    | Flow Area             | 1.00 mm²              |
    +-----------------------+-----------------------+
    | Total Simulation Time | 1.00 s                |
    +-----------------------+-----------------------+
    | Scatterer Density     | 1.00×10² Gparticle/m³ |
    +-----------------------+-----------------------+
    | Number of events      | 7.00×10⁰ particle     |
    +-----------------------+-----------------------+




.. GENERATED FROM PYTHON SOURCE LINES 39-123

.. code-block:: python3

    distribution = NormalDistribution(
        mean=10e-6,         # Mean particle size: 10 µm
        std_dev=0.8e-8,     # Standard deviation of particle size: 0.8 µm
    )

    scatterer_distribution = ScattererDistribution(
        flow=flow,
        refractive_index=1.5,         # Refractive index of the particles
        distributions=[distribution]  # Normal distribution of particle sizes
    )

    scatterer_distribution.print_properties()

    # Step 3: Define the light source
    # -------------------------------
    # The light source used for the simulation is a laser with a wavelength of 1550 nm
    # and an optical power of 1 mW. The laser's focusing optics are characterized by a
    # numerical aperture (NA) of 0.4.
    source = Source(
        NA=0.4,                       # Numerical aperture of the source
        wavelength=1550e-9,           # Wavelength of the laser source: 1550 nm
        optical_power=1e-3            # Optical power of the laser: 1 mW
    )

    # Step 4: Define two detectors
    # ----------------------------
    # The first detector (FSC) is for Forward Scatter, and the second detector (SSC) is for
    # Side Scatter. Each detector has different numerical apertures and settings. These detectors
    # will capture the light scattered by the particles.
    detector_fsc = Detector(
        name='FSC',                   # Forward Scatter (FSC) detector
        NA=0.4,       # Numerical aperture of the detector
        theta_angle=90,                # Angle relative to the light beam
        acquisition_frequency=1e3,    # Acquisition frequency: 1000 Hz
        noise_level=1e-4,             # Noise floor of 0.0001 volt
        saturation_level=1000,        # Maximum signal before saturation
        baseline_shift=0.0,           # No baseline shift
        n_bins=512,                   # Number of bins for signal discretization
        responsitivity=1              # Responsitivity of the detector
    )

    detector_ssc = Detector(
        name='SSC',                   # Side Scatter (SSC) detector
        NA=0.2,       # Numerical aperture of the SSC detector
        theta_angle=90,               # Positioned at 90 degrees to detect side scatter
        acquisition_frequency=1e3,    # Acquisition frequency: 1000 Hz
        noise_level=1e-4,             # Noise floor of 0.0001 volt
        saturation_level=1000,        # Maximum signal before saturation
        baseline_shift=0.0,           # No baseline shift
        n_bins=1000,                   # Fewer bins for lower resolution
        responsitivity=1              # Responsitivity of the detector
    )

    # Step 5: Create a FlowCytometer instance
    # ---------------------------------------
    # We define a flow cytometer setup where particles pass through the laser beam at a flow speed of
    # 80 µm/s and in a flow area of 1 µm². The source, detectors, and particle distribution are passed
    # to the FlowCytometer instance. Rayleigh scattering is used as the coupling mechanism to model
    # how the particles interact with the laser beam.
    cytometer = FlowCytometer(
        source=source,                          # Laser source
        scatterer_distribution=scatterer_distribution,  # Particle size distribution
        detectors=[detector_fsc], # List of detectors (FSC and SSC)
        coupling_mechanism='rayleigh'           # Rayleigh scattering model
    )

    # Step 6: Simulate the flow cytometer signals
    # -------------------------------------------
    # The signals generated by the flow cytometer for both detectors (FSC and SSC) are
    # simulated as particles pass through the laser beam.
    cytometer.simulate_pulse()
    # print(id(detector_fsc))
    # print(detector_fsc.signal.mean())
    # print(detector_fsc.raw_signal)

    # Step 7: Display the properties of the simulation
    # ------------------------------------------------
    # Print the properties of the cytometer, including the source power, particle density,
    # and flow speed, to understand the simulation setup better.
    # cytometer.print_properties()

    # Step 8: Visualize the generated signals
    # ---------------------------------------
    # Plot the simulated signals for both Forward Scatter (FSC) and Side Scatter (SSC) detectors.




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Flow Properties
    +-----------------------+-----------------------+
    | Property              | Value                 |
    +=======================+=======================+
    | Flow Speed            | 80.00 µm/s            |
    +-----------------------+-----------------------+
    | Flow Area             | 1.00 mm²              |
    +-----------------------+-----------------------+
    | Total Simulation Time | 1.00 s                |
    +-----------------------+-----------------------+
    | Scatterer Density     | 1.00×10² Gparticle/m³ |
    +-----------------------+-----------------------+
    | Number of events      | 7.00×10⁰ particle     |
    +-----------------------+-----------------------+

    Scatterers Properties
    +-------------------------------+-------------+
    | Property                      | Value       |
    +===============================+=============+
    | Refractive Index              | 1.5         |
    +-------------------------------+-------------+
    | Mean Size (all distributions) | 1.00×10¹ µm |
    +-------------------------------+-------------+
    | Number of Events              | 7           |
    +-------------------------------+-------------+




.. GENERATED FROM PYTHON SOURCE LINES 124-126

.. code-block:: python3

    cytometer.plot()




.. image-sg:: /gallery/images/sphx_glr_plot_flow_cytometer_signal_001.png
   :alt: Detector: FSC, Size Distribution of Scatterers
   :srcset: /gallery/images/sphx_glr_plot_flow_cytometer_signal_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 127-134

The above plot shows the raw simulated signals for the Forward Scatter (FSC) and
Side Scatter (SSC) channels. These signals can be analyzed further to extract
features such as peak height, width, and area. Such analyses provide insights
into the properties of the particles, such as size and shape complexity.

This simulation can serve as a basis for developing and testing signal processing
algorithms in flow cytometry.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.241 seconds)


.. _sphx_glr_download_gallery_plot_flow_cytometer_signal.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_flow_cytometer_signal.py <plot_flow_cytometer_signal.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_flow_cytometer_signal.ipynb <plot_flow_cytometer_signal.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
