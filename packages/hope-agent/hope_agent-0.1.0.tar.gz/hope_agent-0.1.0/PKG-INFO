Metadata-Version: 2.1
Name: hope-agent
Version: 0.1.0
Summary: Advanced AI agent orchestration system
Home-page: https://github.com/U-C4N/HOPE-Agent
Author: Umutcan Edizaslan
Author-email: noreply@deuz.ai
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: langchain
Requires-Dist: rich
Requires-Dist: pytest
Requires-Dist: groq
Requires-Dist: textblob
Requires-Dist: fastapi
Requires-Dist: python-dotenv
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mypy; extra == "dev"

# HOPE Agent v1.0

HOPE (Highly Orchestrated Python Environment) Agent is an advanced AI agent orchestration system designed to manage complex AI tasks, facilitate communication between agents, and provide a user-friendly interface.

## Features

- **JSON-based Agent Management**: Create and manage AI agents using a flexible JSON structure.
- **Rich Command-line Interface**: Interact with the system using a colorful and formatted CLI.
- **LangChain Integration**: Utilize LangChain's powerful language model capabilities.
- **Groq API Usage**: Leverage Groq's advanced AI models for various tasks.
- **Advanced Memory Management**: Implement sophisticated short-term and long-term memory for agents.
- **Agent Communication**: Enable complex interactions between AI agents.
- **Dynamic Task Allocation**: Efficiently distribute tasks among available agents.
- **Modular Plugin System**: Extend functionality through a flexible plugin architecture.
- **Comprehensive Error Management**: Robust error handling and logging system.
- **Scalability and Performance Optimization**: Designed for high performance and scalability.

## Prerequisites

- Python 3.7 or later
- pip (Python package manager)

## Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/U-C4N/hope-agent.git
   cd hope-agent
   ```

2. Install dependencies:
   ```bash
   pip install -e .
   ```

3. Set up your environment variables:
   Create a `.env` file in the root directory and add your API keys:
   ```
   GROQ_API_KEY=your_groq_api_key_here
   GROQ_MODEL=your_preferred_model
   MAX_AGENTS=10
   TASK_QUEUE_SIZE=100
   LOG_LEVEL=INFO
   ```

## Usage

1. Run the translator example:
   ```bash
   python example/translator.py
   ```

2. Follow the prompts to input the path to the text file you want to translate and the target language.

3. The system will use two AI agents (a translator and a quality assurance specialist) to translate the text and check its quality.

For more detailed usage instructions, refer to the `user-guide.txt` file.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- [Groq](https://groq.com/) for providing the AI API.
- [LangChain](https://langchain.com/) for the language model toolkit.
- [Rich](https://github.com/Textualize/rich) for beautiful console formatting.
- [python-dotenv](https://github.com/theskumar/python-dotenv) for environment variable management.
