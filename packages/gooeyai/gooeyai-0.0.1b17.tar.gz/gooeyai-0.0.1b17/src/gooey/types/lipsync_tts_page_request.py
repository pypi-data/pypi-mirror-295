# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .lipsync_tts_page_request_functions_item import LipsyncTtsPageRequestFunctionsItem
import pydantic
from .lipsync_tts_page_request_tts_provider import LipsyncTtsPageRequestTtsProvider
from .lipsync_tts_page_request_openai_voice_name import LipsyncTtsPageRequestOpenaiVoiceName
from .lipsync_tts_page_request_openai_tts_model import LipsyncTtsPageRequestOpenaiTtsModel
from .lipsync_tts_page_request_sadtalker_settings import LipsyncTtsPageRequestSadtalkerSettings
from .lipsync_tts_page_request_selected_model import LipsyncTtsPageRequestSelectedModel
from .run_settings import RunSettings
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LipsyncTtsPageRequest(UniversalBaseModel):
    functions: typing.Optional[typing.List[LipsyncTtsPageRequestFunctionsItem]] = None
    variables: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Variables to be used as Jinja prompt templates and in functions as arguments
    """

    text_prompt: str
    tts_provider: typing.Optional[LipsyncTtsPageRequestTtsProvider] = None
    uberduck_voice_name: typing.Optional[str] = None
    uberduck_speaking_rate: typing.Optional[float] = None
    google_voice_name: typing.Optional[str] = None
    google_speaking_rate: typing.Optional[float] = None
    google_pitch: typing.Optional[float] = None
    bark_history_prompt: typing.Optional[str] = None
    elevenlabs_voice_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Use `elevenlabs_voice_id` instead
    """

    elevenlabs_api_key: typing.Optional[str] = None
    elevenlabs_voice_id: typing.Optional[str] = None
    elevenlabs_model: typing.Optional[str] = None
    elevenlabs_stability: typing.Optional[float] = None
    elevenlabs_similarity_boost: typing.Optional[float] = None
    elevenlabs_style: typing.Optional[float] = None
    elevenlabs_speaker_boost: typing.Optional[bool] = None
    azure_voice_name: typing.Optional[str] = None
    openai_voice_name: typing.Optional[LipsyncTtsPageRequestOpenaiVoiceName] = None
    openai_tts_model: typing.Optional[LipsyncTtsPageRequestOpenaiTtsModel] = None
    input_face: typing.Optional[str] = None
    face_padding_top: typing.Optional[int] = None
    face_padding_bottom: typing.Optional[int] = None
    face_padding_left: typing.Optional[int] = None
    face_padding_right: typing.Optional[int] = None
    sadtalker_settings: typing.Optional[LipsyncTtsPageRequestSadtalkerSettings] = None
    selected_model: typing.Optional[LipsyncTtsPageRequestSelectedModel] = None
    settings: typing.Optional[RunSettings] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
