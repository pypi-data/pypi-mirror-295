import pathlib
from datetime import datetime
import numpy as np
import os

FRAME_RATE = 30
VIDEO_SHAPE = (480, 640)

ARENA_SIZE_CM = 50
SHELTER_SIZE_CM = 10
ARENA_WIDTH_PX = 240
ARENA_LENGTH_PX = 600
NORMALISED_SHELTER_FRONT = 0.2

BOX_CORNER_COORDINATES = [[0, 240], [0, 0], [600, 240], [600, 0]]
FREEZE_BUFFER_FRAMES = (
    12  # number of frames after loom onset to ignore in classifying freeze
)

N_SAMPLES_BEFORE = 30
N_SAMPLES_AFTER = 150
TRACK_LENGTH = N_SAMPLES_BEFORE + N_SAMPLES_AFTER

CLASSIFICATION_WINDOW_END = 150 + N_SAMPLES_BEFORE
SPEED_THRESHOLD = -0.017 * FRAME_RATE * ARENA_SIZE_CM
CLASSIFICATION_DURATION_S = 5
END_OF_CLASSIFICATION_WINDOW = 350 + N_SAMPLES_BEFORE

LOOM_ONSETS = np.array([0, 28.5, 57, 85.5, 114]) + N_SAMPLES_BEFORE
LOOM_ONSETS_S = [s  / 30 for s in LOOM_ONSETS]
LOOMING_STIMULUS_ONSET_SAMPLE = LOOM_ONSETS[0]

CLASSIFICATION_WINDOW_START = LOOM_ONSETS[0]
N_LOOMS_PER_STIMULUS = len(LOOM_ONSETS)

AUDITORY_STIMULUS_CHANNEL_ADDED_DATE = datetime(2019, 1, 25)
HEADBAR_REMOVED_DATE = datetime(2018, 2, 23)

BASE_DIR = pathlib.Path(os.path.dirname(os.path.abspath(__file__))).parent
DEFAULT_BOX_COORDINATES = "./box_corner_coordinates.npy"

flatui = ["#9b59b6", "#3498db", "#95a5a6"]
